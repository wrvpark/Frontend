[{"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\index.js":"1","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\App.js":"2","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\LoadCategories\\loadCategories.jsx":"3","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\sideMenu.jsx":"4","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\HomePage\\index.jsx":"5","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\index.jsx":"6","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Settings\\index.jsx":"7","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\index.jsx":"8","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\index.jsx":"9","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Login\\index.jsx":"10","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\index.jsx":"11","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\CreateEvent\\index.jsx":"12","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\index.jsx":"13","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\index.jsx":"14","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\index.jsx":"15","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\navButtons.jsx":"16","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\apifunction.js":"17","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\profile.js":"18","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\logo.js":"19","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\HomePage\\pictureShowSlide.js":"20","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NotificationBell.js":"21","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\CreateEvent\\eventModal.js":"22","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\SearchMenu\\actionMenu.jsx":"23","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\Calendar\\EventCalendar.jsx":"24","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\ajaxLog.js":"25","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\ajax.js":"26","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Detail\\index.jsx":"27","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Home\\index.jsx":"28","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\AddUpdate\\index.jsx":"29","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Home\\index.jsx":"30","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\AddUpdate\\index.jsx":"31","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Settings\\UserInfo\\index.jsx":"32","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Home\\index.jsx":"33","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Detail\\index.jsx":"34","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Detail\\index.jsx":"35","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\AddUpdate\\index.jsx":"36","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\AddUpdate\\index.jsx":"37","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Home\\index.jsx":"38","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\AccountsDetails\\index.jsx":"39","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\AccountsDetails\\Details\\index.jsx":"40","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Detail\\index.jsx":"41","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\LogPage\\index.jsx":"42","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\Detail\\index.jsx":"43","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\Home\\index.jsx":"44","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\AddUpdate\\index.jsx":"45","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\Delete\\index.jsx":"46","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\viewEvent.js":"47","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\SearchMenu\\searchFeature.jsx":"48","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\Account\\decodeAccessToken.jsx":"49","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\tokenRefresher.jsx":"50","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\constant\\constants.js":"51","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Detail\\contactSeller.jsx":"52","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Detail\\showPictures.jsx":"53","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\LinkButton\\index.jsx":"54","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\AddUpdate\\confirmationModal.jsx":"55","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Detail\\contactSeller.jsx":"56","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\AddUpdate\\confirmationModal.jsx":"57","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\FileUpload\\fileupload.jsx":"58","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Detail\\showPictures.jsx":"59","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\AddUpdate\\confirmationModal.jsx":"60","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Detail\\responses.jsx":"61","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Detail\\newResponse.jsx":"62","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\AddUpdate\\confirmationModal.jsx":"63","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Detail\\contactSeller.jsx":"64","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Detail\\showPictures.jsx":"65","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\UpdateEvent\\index.jsx":"66","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\UpdateEvent\\eventModal.js":"67"},{"size":264,"mtime":1616042705326,"results":"68","hashOfConfig":"69"},{"size":2945,"mtime":1619035379401,"results":"70","hashOfConfig":"69"},{"size":2250,"mtime":1618959493951,"results":"71","hashOfConfig":"69"},{"size":2855,"mtime":1618928370671,"results":"72","hashOfConfig":"69"},{"size":2417,"mtime":1619033322329,"results":"73","hashOfConfig":"69"},{"size":906,"mtime":1618287542019,"results":"74","hashOfConfig":"69"},{"size":627,"mtime":1619035059882,"results":"75","hashOfConfig":"69"},{"size":879,"mtime":1618287542099,"results":"76","hashOfConfig":"69"},{"size":855,"mtime":1618287541942,"results":"77","hashOfConfig":"69"},{"size":2951,"mtime":1617653026777,"results":"78","hashOfConfig":"69"},{"size":807,"mtime":1618959854341,"results":"79","hashOfConfig":"69"},{"size":11236,"mtime":1618955028255,"results":"80","hashOfConfig":"69"},{"size":897,"mtime":1618287542036,"results":"81","hashOfConfig":"69"},{"size":2105,"mtime":1618974788521,"results":"82","hashOfConfig":"69"},{"size":853,"mtime":1617653026790,"results":"83","hashOfConfig":"69"},{"size":6617,"mtime":1618955028248,"results":"84","hashOfConfig":"69"},{"size":10004,"mtime":1618898351307,"results":"85","hashOfConfig":"69"},{"size":26377,"mtime":1618955028250,"results":"86","hashOfConfig":"69"},{"size":335,"mtime":1618287541821,"results":"87","hashOfConfig":"69"},{"size":1813,"mtime":1619035186506,"results":"88","hashOfConfig":"69"},{"size":176,"mtime":1616042705313,"results":"89","hashOfConfig":"69"},{"size":3389,"mtime":1618928827079,"results":"90","hashOfConfig":"69"},{"size":1158,"mtime":1618976318720,"results":"91","hashOfConfig":"69"},{"size":3315,"mtime":1618975859292,"results":"92","hashOfConfig":"69"},{"size":1457,"mtime":1618958130195,"results":"93","hashOfConfig":"69"},{"size":2221,"mtime":1618957957066,"results":"94","hashOfConfig":"69"},{"size":7971,"mtime":1619033758282,"results":"95","hashOfConfig":"69"},{"size":8741,"mtime":1619033997304,"results":"96","hashOfConfig":"69"},{"size":9208,"mtime":1619033470658,"results":"97","hashOfConfig":"69"},{"size":10075,"mtime":1619035018656,"results":"98","hashOfConfig":"69"},{"size":11312,"mtime":1619034802588,"results":"99","hashOfConfig":"69"},{"size":1988,"mtime":1619035135194,"results":"100","hashOfConfig":"69"},{"size":11750,"mtime":1619033151079,"results":"101","hashOfConfig":"69"},{"size":10201,"mtime":1619032719209,"results":"102","hashOfConfig":"69"},{"size":8199,"mtime":1619034912630,"results":"103","hashOfConfig":"69"},{"size":9106,"mtime":1618928736528,"results":"104","hashOfConfig":"69"},{"size":11131,"mtime":1619034291297,"results":"105","hashOfConfig":"69"},{"size":13681,"mtime":1619034748119,"results":"106","hashOfConfig":"69"},{"size":8557,"mtime":1618973281494,"results":"107","hashOfConfig":"69"},{"size":14028,"mtime":1618974102841,"results":"108","hashOfConfig":"69"},{"size":7414,"mtime":1619034552203,"results":"109","hashOfConfig":"69"},{"size":5736,"mtime":1618420307040,"results":"110","hashOfConfig":"69"},{"size":2159,"mtime":1618876369392,"results":"111","hashOfConfig":"69"},{"size":11652,"mtime":1618930418361,"results":"112","hashOfConfig":"69"},{"size":8336,"mtime":1618929005875,"results":"113","hashOfConfig":"69"},{"size":2530,"mtime":1618876364172,"results":"114","hashOfConfig":"69"},{"size":5925,"mtime":1618975358121,"results":"115","hashOfConfig":"69"},{"size":7697,"mtime":1618976538611,"results":"116","hashOfConfig":"69"},{"size":520,"mtime":1618958916413,"results":"117","hashOfConfig":"69"},{"size":2566,"mtime":1618958693514,"results":"118","hashOfConfig":"69"},{"size":64,"mtime":1618460992284,"results":"119","hashOfConfig":"69"},{"size":6649,"mtime":1619034499844,"results":"120","hashOfConfig":"69"},{"size":2170,"mtime":1619034658134,"results":"121","hashOfConfig":"69"},{"size":266,"mtime":1616042705279,"results":"122","hashOfConfig":"69"},{"size":5544,"mtime":1619034235771,"results":"123","hashOfConfig":"69"},{"size":6515,"mtime":1619034878724,"results":"124","hashOfConfig":"69"},{"size":4949,"mtime":1618977653927,"results":"125","hashOfConfig":"69"},{"size":7201,"mtime":1618958175820,"results":"126","hashOfConfig":"69"},{"size":2117,"mtime":1619034967802,"results":"127","hashOfConfig":"69"},{"size":5805,"mtime":1618977917686,"results":"128","hashOfConfig":"69"},{"size":1593,"mtime":1619032966244,"results":"129","hashOfConfig":"69"},{"size":4725,"mtime":1618871608468,"results":"130","hashOfConfig":"69"},{"size":5016,"mtime":1618977646280,"results":"131","hashOfConfig":"69"},{"size":7037,"mtime":1619034873146,"results":"132","hashOfConfig":"69"},{"size":2150,"mtime":1619033898454,"results":"133","hashOfConfig":"69"},{"size":9771,"mtime":1618955028259,"results":"134","hashOfConfig":"69"},{"size":3386,"mtime":1618955028258,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"1yn4z3n",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"138"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"138"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"138"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"138"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"138"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"138"},"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\index.js",[],["291","292"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\App.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\LoadCategories\\loadCategories.jsx",["293"],"// Imports\r\nimport { useEffect} from 'react';\r\n\r\n// API calls\r\nimport { getCategoryIDs } from '../../api/apifunction'\r\n\r\n\r\n/**\r\n * Logic for getting categories id \r\n * \r\n * @author Charles Breton\r\n */\r\nexport const LoadCategories = () => {\r\n    \r\n    // Initial function when first loaded\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    })\r\n\r\n    // Fetch all categories id\r\n    const fetchCategories = async () => {\r\n        let data = null;\r\n        const response = await getCategoryIDs();\r\n        \r\n        // Ensure that we have a valid response\r\n        if (response !== \"Network Error\" && typeof response.data !== 'undefined') {\r\n            if (response.data.status === \"SUCCESS\" && response.data.data !== null) {\r\n                \r\n                data = response.data.data\r\n\r\n                // store categories based of data received\r\n                data.map((item) => {\r\n                    // console.log(item)\r\n                    if (item.name === \"Park Document\") {\r\n                        localStorage.setItem(\"park_doc_cat_id\", item.id);\r\n                    } else if (item.name === \"Event\") {\r\n                        localStorage.setItem(\"event_cat_id\", item.id);\r\n                    } else if (item.name === \"Services\") {\r\n                        localStorage.setItem(\"services_cat_id\", item.id);\r\n                    } else if (item.name === \"For Sale or Rent\") {\r\n                        localStorage.setItem(\"sr_cat_id\", item.id);\r\n                    } else if (item.name === \"Lost & Found\") {\r\n                        localStorage.setItem(\"lf_cat_id\", item.id);\r\n                    } else if (item.name === \"Forum\") {\r\n                        localStorage.setItem(\"forum_cat_id\", item.id);\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n\r\n            // Remove stored data\r\n            localStorage.setItem(\"park_doc_cat_id\", null);\r\n            localStorage.setItem(\"event_cat_id\", null);\r\n            localStorage.setItem(\"services_cat_id\", null);\r\n            localStorage.setItem(\"sr_cat_id\", null);\r\n            localStorage.setItem(\"lf_cat_id\", null);\r\n            localStorage.setItem(\"forum_cat_id\", null);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <></>   \r\n    )\r\n\r\n}","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\sideMenu.jsx",["294","295","296"],"import React, { Component } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport Logo from \"./logo\";\r\nimport NavButtons from \"./navButtons.jsx\";\r\nimport Profile from \"./profile\";\r\n// import styles from \"./sideMenu.module.css\";\r\nimport \"./navMenu.css\";\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\n\r\nexport default class SideMenu extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleCallback = this.handleCallback.bind(this);\r\n    this.state = {\r\n      menuOpen: true,\r\n      profileNavIsDisplayed: false,\r\n      logOut: false,\r\n      isAdmin: false,\r\n    };\r\n  }\r\n\r\n  toggleSideMenu = (e) => {\r\n    this.setState({ menuOpen: !this.state.menuOpen });\r\n  };\r\n\r\n  isSideMenuOpen = (state) => {\r\n    this.setState({ menuOpen: state.isOpen });\r\n    this.props.parentCallback(this.state.menuOpen);\r\n    // console.log(!this.state.menuOpen);\r\n    // state.preventDefault();\r\n    return state.isOpen;\r\n  };\r\n\r\n  handleCallback = (childData, logOut) => {\r\n    this.setState({ profileNavIsDisplayed: !childData, logOut: logOut });\r\n    // console.log(\"sideState \"+ this.state.profileNavIsDisplayed);\r\n  };\r\n\r\n  handleLogOut = (childData) => {\r\n    this.setState({ logOut: childData });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.checkAccountPermission(prevProps, prevState);\r\n  }\r\n\r\n  checkAccountPermission = (prevProps, prevState) => {\r\n    const token = localStorage.getItem(\"access_token\");\r\n\r\n    if (token !== null) {\r\n      const token_info = JSON.parse(localStorage.getItem(\"session_details\"));\r\n      for (let i = 0; i < token_info.realm_access.roles.length; i++) {\r\n        if (\r\n          prevState.profileNavIsDisplayed !== this.state.profileNavIsDisplayed\r\n        ) {\r\n          if (token_info.realm_access.roles[i] === \"admin\") {\r\n            this.setState({ isAdmin: true });\r\n          } else {\r\n            this.setState({ isAdmin: false });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        left\r\n        isOpen={this.state.menuOpen}\r\n        onStateChange={this.isSideMenuOpen}\r\n        disableOverlayClick\r\n        burgerButtonClassName={\"navMenuButton\"}\r\n        crossClassName={\"navMenuCross\"}\r\n        morphShapeClassName={\"navMenuMorph\"}\r\n        className={\"sideMenu\"}\r\n        overlayClassName={\"navMenuOverlay\"}\r\n        noOverlay\r\n        customCrossIcon={false}\r\n      >\r\n        <Logo />\r\n        <NavButtons\r\n          dataParentToChild={this.state.profileNavIsDisplayed}\r\n          isAdminData={this.state.isAdmin}\r\n          parentCallback={this.handleLogOut}\r\n        />\r\n        <Profile\r\n          dataParentToChild={this.state.profileNavIsDisplayed}\r\n          LogOutData={this.state.logOut}\r\n          parentCallback={this.handleCallback}\r\n        />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\HomePage\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Settings\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Login\\index.jsx",["297","298"],"import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Checkbox, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n// import { Redirect} from 'react-router-dom'\r\n\r\nimport \"./login.less\";\r\n// import { userLogin } from '../../api/apifunction'\r\n\r\nexport default class Login extends Component {\r\n  state = { admin: \"\" };\r\n  onFinish = async (values) => {\r\n    //get the username and password from the the from\r\n    const { username, password } = values;\r\n    //call the userLogin method\r\n\r\n    if (username === \"isabel\") {\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  render() {\r\n    //check if the user already login\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          {/* must import the image logo first, then use it here */}\r\n          {/* <img src={logo} alt=\"logo\" /> */}\r\n          <h1>Wendy's RV Park</h1>\r\n        </header>\r\n\r\n        <section className=\"login-content\">\r\n          <h3>User Login</h3>\r\n          <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={this.onFinish}\r\n            onFinishFailed={this.onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Username!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                <Checkbox>Remember me</Checkbox>\r\n              </Form.Item>\r\n\r\n              <a className=\"login-form-forgot\" href=\"www.baidu.com\">\r\n                Forgot password\r\n              </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                Log in\r\n              </Button>\r\n              Or <a href=\"www.baidu.com\">register now!</a>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\CreateEvent\\index.jsx",["299","300","301","302","303","304","305"],"import React, { useEffect, useState, Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./createEvent.css\";\r\nimport NotificationBell from \"../../../Components/NotificationBell\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DatePicker from \"@bit/nexxtway.react-rainbow.date-picker\";\r\nimport TimeField from \"react-simple-timefield\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { message, Upload } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { addEvent } from \"../../../api/apifunction\";\r\nimport DisplayEventInfo from \"./eventModal\";\r\n\r\nimport {\r\n  searchEventsByCategory,\r\n  eventRetrieval,\r\n  searchEventsBySearch,\r\n  fetchSubCategories,\r\n} from \"../../../api/apifunction\";\r\n\r\n\r\nexport default class CreateEvent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      eventName: \"\",\r\n      location: \"\",\r\n      startDate: new Date(),\r\n      startTime: \"\",\r\n      endDate: new Date(),\r\n      endTime: \"\",\r\n      description: \"\",\r\n      fileName: \"fileNameForNow.txt\",\r\n      recurring: false,\r\n      isLimited: false,\r\n      uId: \"\",\r\n      locations: [],\r\n      categories: [],\r\n      category: \"\",\r\n      displayEvent: false,\r\n    };\r\n    this.fetchSubCategories = this.fetchSubCategories.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.ref = React.createRef();\r\n\r\n    // this.fetchSubCategories();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let currentComponent = this;\r\n    this.fetchSubCategories(currentComponent);\r\n  }\r\n\r\n  fetchSubCategories = async (currentComponent) => {\r\n    // console.log(\"WORKING\")\r\n    const event_id = localStorage.getItem(\"event_cat_id\");\r\n    await axios\r\n      .get(\"http://localhost/api/v1/categories/\" + event_id)\r\n      .then(function (response) {\r\n        // handle success\r\n        const responseData = response.data;\r\n        let locations = [];\r\n        let categories = [];\r\n        if (responseData.status === \"SUCCESS\" && responseData !== null) {\r\n          for (let elem of responseData.data) {\r\n            if (elem.type === \"location\") {\r\n              locations.push({\r\n                value: elem.id,\r\n                label: elem.name,\r\n                type: elem.type,\r\n              });\r\n            } else {\r\n              categories.push({\r\n                value: elem.id,\r\n                label: elem.name,\r\n                type: elem.type,\r\n              });\r\n            }\r\n          }\r\n\r\n          currentComponent.setState({\r\n            locations: locations,\r\n          });\r\n\r\n          currentComponent.setState({\r\n            categories: categories,\r\n          });\r\n        } else {\r\n          message.error(responseData.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  fetchSubCategoriesCall =  () => {\r\n    console.log(localStorage.getItem(\"event_cat_id\"))\r\n    const response = fetchSubCategories(localStorage.getItem(\"event_cat_id\"));\r\n    console.log(response)\r\n    if (response !== \"Network Error\" && typeof response.data !== 'undefined') {\r\n      if (response.status === \"SUCCESS\" && response.data !== null) {\r\n        console.log(response)\r\n        this.handleCategoryType(response.data)\r\n      } else {\r\n        message.error('Error retrieving categories');\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  handleCategoryType = (info) => {\r\n    // Check if we receive any categories\r\n    // if (info !== null) {\r\n    // Setup initial default value\r\n    let locList = [{ value: \"\", label: \"Location\" }];\r\n    let descList = [{ value: \"\", label: \"Categories\" }];\r\n\r\n    // Go through list and determine which goes where\r\n    for (let i = 0; i < info.length; i++) {\r\n      if (info[i].type === \"location\") {\r\n        let object = {\r\n          value: info[i].id,\r\n          label: info[i].name,\r\n        };\r\n        locList.push(object);\r\n      } else {\r\n        let object = {\r\n          value: info[i].id,\r\n          label: info[i].name,\r\n        };\r\n        descList.push(object);\r\n      }\r\n    }\r\n    this.setState({ locations: locList});\r\n    this.setState({ categories: locList});\r\n\r\n    // }\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    axios\r\n      .post(\"http://localhost/api/v1/events/\", {\r\n        uId: this.state.uId,\r\n        title: this.state.eventName,\r\n        description: this.state.description,\r\n        startTime: this.state.startDate,\r\n        endTime: this.state.endDate,\r\n        fileName: \"wqe\",\r\n        isLimited: this.state.limited,\r\n        locSubId: this.state.location,\r\n        descSubId: this.state.category,\r\n        isRecurring: this.state.recurring,\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        const responseData = response.data;\r\n        if (responseData.status === \"SUCCESS\" && responseData !== null) {\r\n          window.alert(\"Event Added Successfuly\")\r\n          this.showSuccessModal(responseData);\r\n          console.log(responseData.message)\r\n        } else {\r\n          message.error(responseData.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  showSuccessModal = (responseData) => {\r\n    \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    try {\r\n      if (e.target.type === \"checkbox\") {\r\n        this.setState({\r\n          [e.target.id]: e.target.checked,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          [e.target.id]: e.target.value,\r\n        });\r\n        console.log(e.target.id);\r\n      }\r\n    } catch {\r\n      if (e.type === \"description\") {\r\n        this.setState({\r\n          category: e.value,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          [e.type]: e.value,\r\n        });\r\n      }\r\n      console.log(e.type, e.value, e.label);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const fileProps = {\r\n      name: \"files\",\r\n      multiple: true,\r\n      action: \"http://localhost:80/api/v1/files\",\r\n      onChange(info) {\r\n        const { status } = info.file;\r\n        if (status === \"done\") {\r\n          const fileNames = info.file.response.data;\r\n          console.log(fileNames);\r\n          // this.setState({ fileName: fileNames[0] });\r\n          message.success(`${info.file.name} file uploaded successfully.`);\r\n        } else if (status === \"error\") {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"top\">\r\n          <NavLink to=\"/event\" exact className=\"backToEvent\">\r\n            EVENT\r\n          </NavLink>\r\n          <h1> {\">\"} </h1>\r\n          <NavLink to=\"/event/create\" exact className=\"currPage\">\r\n            EVENT CREATION\r\n          </NavLink>\r\n\r\n          <NotificationBell />\r\n        </div>\r\n        <div className=\"forms\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\">\r\n                <Form.Control\r\n                  placeholder=\"EVENT NAME\"\r\n                  className=\"eventName\"\r\n                  id=\"eventName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"3\">\r\n                <Select\r\n                  placeholder=\"Location\"\r\n                  options={this.state.locations}\r\n                  id=\"location\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"3\">\r\n                <Select\r\n                  placeholder=\"Category\"\r\n                  options={this.state.categories}\r\n                  id=\"category\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"3\" className=\"startDateGroup\">\r\n                <Form.Label>start date</Form.Label>\r\n                <DatePicker\r\n                  formatStyle=\"medium\"\r\n                  value={this.state.startDate}\r\n                  onChange={(value) => this.setState({ startDate: value })}\r\n                  className=\"startDate\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"1\" className=\"startTimeGroup\">\r\n                <Form.Label>start time</Form.Label>\r\n                <TimeField\r\n                  onChange={this.handleChange}\r\n                  className=\"startTime\"\r\n                  id=\"startTime\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" className=\"endDateGroup\">\r\n                <Form.Label>end date</Form.Label>\r\n                <DatePicker\r\n                  formatStyle=\"medium\"\r\n                  value={this.state.endDate}\r\n                  onChange={(value) => this.setState({ endDate: value })}\r\n                  className=\"endDate\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"1\">\r\n                <Form.Label>end time</Form.Label>\r\n                <TimeField\r\n                  onChange={this.handleChange}\r\n                  className=\"endTime\"\r\n                  id=\"endTime\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group className=\"descriptionGroup\">\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"7\"\r\n                  fluid\r\n                  placeholder=\"Description\"\r\n                  className=\"description\"\r\n                  id=\"description\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row >\r\n              <div className=\"file_uploading\">\r\n              <Upload {...fileProps}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">\r\n                  Click or drag file to this area to upload\r\n                </p>\r\n              </Upload>\r\n              </div>\r\n            </Form.Row>\r\n\r\n            {/* <Form.Row>\r\n              <Form.Group className=\"recurringGroup\">\r\n                <Form.Check\r\n                  className=\"recurring\"\r\n                  type=\"checkbox\"\r\n                  label=\"recurring\"\r\n                  id=\"recurring\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group className=\"limitedGroup\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"limited\"\r\n                  className=\"limited\"\r\n                  id=\"limited\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row> */}\r\n\r\n            <Form.Row>\r\n              <Button type=\"submit\" className=\"submitBtn\">\r\n                CREATE\r\n              </Button>\r\n            </Form.Row>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\navButtons.jsx",["306"],"import React from \"react\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport styles from \"./sideMenu.module.css\";\r\nimport \"./sideMenu.module.css\";\r\nimport { ReactComponent as HomeLogo } from \"./ICONS/HomeLogo.svg\";\r\nimport { ReactComponent as EventsLogo } from \"./ICONS/EventsLogo.svg\";\r\nimport { ReactComponent as DocumentLogo } from \"./ICONS/DocumentLogo.svg\";\r\nimport { ReactComponent as SaleRentLogo } from \"./ICONS/SaleRentLogo.svg\";\r\nimport { ReactComponent as ForumLogo } from \"./ICONS/ForumLogo.svg\";\r\nimport { ReactComponent as LostFoundLogo } from \"./ICONS/LostFoundLogo.svg\";\r\nimport { ReactComponent as ServicesLogo } from \"./ICONS/ServicesLogo.svg\";\r\nimport { ReactComponent as LogOutLogo } from \"./ICONS/LogOutLogo.svg\";\r\nimport { ReactComponent as LogsLogo } from \"./ICONS/LogsLogo.svg\";\r\nimport { ReactComponent as UsersLogo } from \"./ICONS/UsersLogo.svg\";\r\nimport { ReactComponent as SettingsLogo } from \"./ICONS/SettingsLogo.svg\";\r\n\r\nimport ThreeDots from '../../images/three_dots.svg'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./btnStyle.css\";\r\nimport { message } from \"antd\";\r\n\r\nexport default class NavButtons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profileNavIsDisplayed: false,\r\n      isAdmin: false\r\n    };\r\n  }\r\n\r\n  // componentDidMount(prevProps, prevState) {\r\n  //   this.checkAccountPermission(prevProps, prevState);\r\n  // }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.dataParentToChild !== prevProps.dataParentToChild) {\r\n      this.setState({ profileNavIsDisplayed: !this.props.dataParentToChild });\r\n    }\r\n\r\n    if (this.props.isAdminData !== prevProps.isAdminData) {\r\n      this.setState({ isAdmin: this.props.isAdminData });\r\n    }\r\n    \r\n    // this.checkAccountPermission(prevProps, prevState);\r\n  }\r\n  \r\n  // checkAccountPermission = () => {\r\n  //   const token = localStorage.getItem(\"access_token\");\r\n\r\n  //   if (token !== null) {\r\n  //     const token_info = JSON.parse(localStorage.getItem(\"session_details\"));\r\n  //     for (let i = 0; i < token_info.realm_access.roles.length; i++) {\r\n  //       if (token_info.realm_access.roles[i] === \"admin\" ) {\r\n  //         this.setState({ isAdmin: true });\r\n  //         console.log(\"isAdmin\")\r\n  //       } else  {\r\n  //         this.setState({ isAdmin: false });\r\n  //         console.log(\"notAdmin\")\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  handleLogOut = () => {\r\n    message.success(\"Logout Successful.\", 5);\r\n    this.props.parentCallback(true);\r\n    this.setState({ profileNavIsDisplayed: false });\r\n\r\n    localStorage.clear()\r\n\r\n    // window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row hidden={this.state.profileNavIsDisplayed}>\r\n            <ButtonGroup vertical className={styles.btnGroup}>\r\n              <NavLink to=\"/\" exact className={\"btn\"} activeClassName=\"active\">\r\n                <HomeLogo className={\"navLogo\"} />\r\n                <span>Home</span>\r\n              </NavLink>\r\n              <NavLink to=\"/event\" className={\"btn\"} activeClassName=\"active\">\r\n                <EventsLogo className={\"navLogo\"} />\r\n                <span>Events</span>\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/documents\"\r\n                exact\r\n                className={\"btn\"}\r\n                activeClassName=\"active\"\r\n              >\r\n                <DocumentLogo className={\"navLogo\"} />\r\n                <span>Park Documents</span>\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/saleAndRent\"\r\n                exact\r\n                className={\"btn\"}\r\n                activeClassName=\"active\"\r\n              >\r\n                <SaleRentLogo className={\"navLogo\"} />\r\n                <span>Sale & Rent</span>\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/forum\"\r\n                exact\r\n                className={\"btn\"}\r\n                activeClassName=\"active\"\r\n              >\r\n                <ForumLogo className={\"navLogo\"} />\r\n                <span>Forum</span>\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/lostAndFound\"\r\n                exact\r\n                className={\"btn\"}\r\n                activeClassName=\"active\"\r\n              >\r\n                <LostFoundLogo className={\"navLogo\"} />\r\n                <span>Lost & Found</span>\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/services\"\r\n                exact\r\n                className={\"btn\"}\r\n                activeClassName=\"active\"\r\n              >\r\n                <ServicesLogo className={\"navLogo\"} />\r\n                <span>Services</span>\r\n              </NavLink>\r\n            </ButtonGroup>\r\n          </Row>\r\n\r\n          <Row hidden={!this.state.profileNavIsDisplayed || !this.state.isAdmin}>\r\n            <ButtonGroup vertical className={styles.btnGroup}>\r\n              <NavLink to=\"/admin/accountsDetails\" exact className={\"btn\"} activeClassName=\"active\">\r\n                <UsersLogo className={\"navLogo\"} />\r\n                <span>User Details</span>\r\n              </NavLink>\r\n              <NavLink to=\"/admin/logs\" exact className={\"btn\"} activeClassName=\"active\">\r\n                <LogsLogo className={\"navLogo\"} />\r\n                <span>Logs</span>\r\n              </NavLink>\r\n              <NavLink to=\"/settings\" exact className={\"btn\"} activeClassName=\"active\">\r\n                <SettingsLogo className={\"navLogo\"} />\r\n                <span>Setting</span>\r\n              </NavLink>\r\n              <NavLink to=\"/\" exact className={\"btn\"} activeClassName=\"active\" onClick={this.handleLogOut} >\r\n                <LogOutLogo className={\"navLogo\"} />\r\n                <span>Log Out</span>\r\n              </NavLink>\r\n            </ButtonGroup>\r\n          </Row>\r\n\r\n          <Row hidden={!this.state.profileNavIsDisplayed || this.state.isAdmin}>\r\n            <ButtonGroup vertical className={styles.btnGroup}>\r\n              <NavLink to=\"/settings\" exact className={\"btn\"} activeClassName=\"active\">\r\n                <SettingsLogo className={\"navLogo\"} />\r\n                <span>Setting</span>\r\n              </NavLink>\r\n              <NavLink to=\"/\" exact className={\"btn\"} activeClassName=\"active\"  onClick={this.handleLogOut}>\r\n                <LogOutLogo className={\"navLogo\"} />\r\n                <span>Log Out</span>\r\n              </NavLink>\r\n            </ButtonGroup>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\apifunction.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\profile.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React from 'react';\r\nimport styles from './sideMenu.module.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport { Component } from \"react\";\r\nimport { userLogin, registerUser } from '../../api/apifunction'\r\nimport { decodeToken } from \"../Account/decodeAccessToken\";\r\nimport { message } from 'antd';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport three_dots from '../../images/three_dots.svg'\r\nimport profile_icon from '../../images/profile_icon.svg'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst username = localStorage.getItem(\"username\")\r\n\r\nconst Profile = (props) => {\r\n\r\n  //modal usestate\r\n  const [showModal, setShow] = useState(false);\r\n  const [showModal2, setShow2] = useState(false);\r\n  const [showModal3, setShow3] = useState(false);\r\n  const [showModal4, setShow4] = useState(false);\r\n\r\n  const [accessToken, setAccessToken] = useState('');\r\n\r\n  //entered username and password\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordVerify, setPasswordVerify] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [lotNumber, setLotNumber] = useState(\"\");\r\n  const [primaryPhone, setPrimary] = useState(\"\");\r\n  const [secondaryPhone, setSecondary] = useState(\"\");\r\n  const [ownership, setOwnership] = useRadioButtons(\"ownership\");\r\n\r\n  const [showLogout, setShowLogout] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  //variables for notification settings\r\n  const [parkNotification, setParkNotifications] = useRadioButtons(\"park\");\r\n  const [eventsNotification, setEventNotifications] = useRadioButtons(\"events\");\r\n  const [salesNotification, setSaleNotification] = useRadioButtons(\"sales\");\r\n  const [servicesNotification, setServicesNotification] = useRadioButtons(\r\n    \"services\"\r\n  );\r\n  const [lostfoundNotification, setLostFoundNotification] = useRadioButtons(\r\n    \"lostfound\"\r\n  );\r\n\r\n  //error message if the credential is incorrect\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [errorMessageNotification, setErrorNotification] = useState(\"\");\r\n  const [errorMessageRegistration, setErrorRegistration] = useState(\"\");\r\n\r\n  //modal manager for login\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //manager for registration\r\n  const handleClose2 = () => setShow2(false);\r\n  const handleShow2 = () => setShow2(true);\r\n\r\n  //manager for password reset\r\n  const handleClose3 = () => setShow3(false);\r\n  const handleShow3 = () => setShow3(true);\r\n\r\n  //manager for notification settings\r\n  const handleClose4 = () => setShow4(false);\r\n  const handleShow4 = () => setShow4(true);\r\n\r\n  //constants for the state of the login and show profile\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const checkForToken = localStorage.getItem(\"access_token\");\r\n    if (checkForToken !== null) {\r\n      retrieveName();\r\n      setShowLogin(!showLogin);\r\n      setShowProfile(!showProfile);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"logOut is \" + props.LogOutData);\r\n    if (props.LogOutData === true) {\r\n      setShowLogin(true);\r\n      setShowLogout(false);\r\n      setShowProfile(false);\r\n      message.success(\"Logout Successful.\", 5);\r\n      localStorage.clear();\r\n      props.parentCallback(showLogout, false);\r\n    }\r\n  }, [props.LogOutData]);\r\n\r\n  useEffect(() => {\r\n    const checkForToken = localStorage.getItem(\"access_token\");\r\n    if (checkForToken !== null) {\r\n      setShowLogin(!showLogin);\r\n      setShowProfile(!showProfile);\r\n    } else {\r\n      setShowLogin(true);\r\n      setShowProfile(false);\r\n    }\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    if (showLogout === true) {\r\n      setShowLogin(false);\r\n      setShowProfile(false);\r\n    } else if (\r\n      showLogout === false &&\r\n      localStorage.getItem(\"access_token\") !== null\r\n    ) {\r\n      setShowLogin(false);\r\n      setShowProfile(true);\r\n    }\r\n    props.parentCallback(showLogout, false);\r\n  }, [showLogout]);\r\n\r\n  const verifyLogin = async () => {\r\n\r\n    //loggin in with the entered credentials\r\n\r\n    if (userName === \"\" || password === \"\")\r\n    {\r\n        setErrorMessage('Please fill in all the fields')\r\n    }\r\n    else\r\n    {\r\n        const response = await userLogin(userName, password);\r\n        const name = userName.split(\"@\")\r\n\r\n        if (response.status === 200) {\r\n              //setting token and username\r\n              localStorage.setItem('access_token', response.data.access_token)\r\n              localStorage.setItem(\"refresh_token\", response.data.refresh_token)\r\n              // localStorage.setItem(\"username\", name[0])\r\n              // console.log(name[0])\r\n\r\n              decodeToken();\r\n              retrieveName();\r\n\r\n              handleClose()\r\n\r\n              //swiching which state is visible\r\n              setShowLogin(!showLogin)\r\n              setShowProfile(!showProfile)\r\n\r\n              //Login message upon successful login\r\n              message.success(\"Login Successful.\", 5)\r\n              setErrorMessage('')\r\n              clearData();\r\n\r\n              window.location.reload()\r\n            }\r\n            else {\r\n              //Error message upon unsucessful credentials\r\n              setErrorMessage('Incorrect username or password!')\r\n            }\r\n        }\r\n  }\r\n\r\n  // handle verifying the registration\r\n  const verifyRegistration = () => {\r\n    const check = checkData();\r\n\r\n    //let validUsername = verifyUsername(username);\r\n    if (check) {\r\n      goToNotification();\r\n      setErrorRegistration('');\r\n    }\r\n\r\n    console.log(userName);\r\n    console.log(password);\r\n    console.log(firstName);\r\n    console.log(lastName);\r\n    console.log(lotNumber);\r\n    console.log(passwordVerify);\r\n    console.log(ownership);\r\n  }\r\n\r\n  const verifyNotification = async () => {\r\n\r\n    console.log(parkNotification);\r\n    console.log(eventsNotification);\r\n    console.log(salesNotification);\r\n    console.log(servicesNotification);\r\n    console.log(lostfoundNotification);\r\n\r\n    //      handleClose4()\r\n    postRegistrationForm();\r\n  }\r\n\r\n  const retrieveName = () => {\r\n    const details = JSON.parse(localStorage.getItem(\"session_details\"));\r\n    if (details !== null) {\r\n      setName(details.name);\r\n    }\r\n    // console.log(details)\r\n  };\r\n\r\n\r\n  // function for verifying the email\r\n  const checkData = () => {\r\n    console.log(\"VERIFYING DATA\")\r\n    let valid = true;\r\n    //console.log(\"FIRST \" + is_firstName)\r\n    if (firstName === \"\") {\r\n      valid = false;\r\n      setErrorRegistration('Please enter your first name');\r\n    }\r\n    else if (lastName === \"\") {\r\n      valid = false;\r\n      setErrorRegistration('Please enter your last name');\r\n    }\r\n    else if (lotNumber === \"\") {\r\n      valid = false;\r\n      setErrorRegistration('Please enter in your lot number');\r\n    }\r\n    else if (validateEmail(userName) === false) {\r\n      valid = false;\r\n      setErrorRegistration('Please enter in a valid email');\r\n    }\r\n    else if (passwordValidate(password) === false) {\r\n      valid = false;\r\n      setErrorRegistration('Password must contain at least one lowercase letter, one upercase letter, one number, and one special character  ')\r\n    }\r\n    else if (passwordVerify === \"\") {\r\n      valid = false;\r\n      setErrorRegistration('Please confirm your password');\r\n    }\r\n    else if (password != passwordVerify) {\r\n      valid = false;\r\n      setErrorRegistration('Passwords must match')\r\n    }\r\n    else if (ownership === null) {\r\n      valid = false;\r\n      setErrorRegistration('Please choose your lot ownership status')\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  //validate email function\r\n  function validateEmail(email) {\r\n    let emailAddress = /\\S+@\\S+\\.\\S+/;\r\n    return emailAddress.test(email);\r\n  }\r\n\r\n  function passwordValidate(password) {\r\n    let strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n    return strongRegex.test(password);\r\n\r\n  }\r\n\r\n  function clearData() {\r\n    setUserName(\"\")\r\n    setPassword(\"\")\r\n    setFirstName(\"\")\r\n    setLastName(\"\")\r\n    setLotNumber(\"\")\r\n    setPasswordVerify(\"\")\r\n    //setOwnership(null)\r\n    //setParkNotifications(null)\r\n    //setEventNotifications(null)\r\n    //setSaleNotification(null)\r\n    //setServicesNotification(null)\r\n    //setLostFoundNotification(null)\r\n  }\r\n\r\n  // function for verifying ownership\r\n  function verifyOwnership(ownership) {\r\n    let is_owner = false\r\n    let is_renter = false\r\n\r\n    if (ownership === \"yes\") {\r\n      is_owner = true;\r\n      let is_renter = false;\r\n\r\n    } else {\r\n      is_owner = false;\r\n      let is_renter = true;\r\n    }\r\n\r\n    return [is_owner, is_renter];\r\n  }\r\n\r\n  //function for verifying notification settings\r\n  function verifyNotificationSettings(parkNotification, eventsNotification, salesNotification, servicesNotification, lostfoundNotification) {\r\n    let isPark = false;\r\n    let isEvents = false;\r\n    let isSales = false;\r\n    let isServices = false;\r\n    let isLostFound = false;\r\n\r\n    let nullResponse = false;\r\n\r\n    if (parkNotification === null || eventsNotification === null || salesNotification === null || servicesNotification === null ||\r\n      lostfoundNotification === null) {\r\n      nullResponse = true;\r\n    }\r\n\r\n    if (parkNotification === \"yes\") {\r\n      isPark = true;\r\n    } else {\r\n      isPark = false;\r\n    }\r\n    if (eventsNotification === \"yes\") {\r\n      isEvents = true;\r\n    } else {\r\n      isEvents = false;\r\n    }\r\n    if (salesNotification === \"yes\") {\r\n      isSales = true;\r\n    } else {\r\n      isSales = false;\r\n    }\r\n    if (servicesNotification === \"yes\") {\r\n      isServices = true;\r\n    } else {\r\n      isServices = false;\r\n    }\r\n    if (lostfoundNotification === \"yes\") {\r\n      isLostFound = true;\r\n    } else {\r\n      isLostFound = false;\r\n    }\r\n\r\n\r\n    return [isPark, isEvents, isSales, isServices, isLostFound, nullResponse];\r\n  }\r\n\r\n  //registration functions\r\n  const postRegistrationForm = async () => {\r\n    let primary_phone = \"\";\r\n    let secondary_phone = \"\";\r\n\r\n    //ownership values;\r\n    let ownershipValues = verifyOwnership(ownership);\r\n    let is_owner = ownershipValues.first;\r\n    let is_renter = ownershipValues.second;\r\n\r\n    //type of member;\r\n    let is_board_member = false;\r\n    let is_park_management = false;\r\n    let is_admin = false;\r\n    let picture = \"\";\r\n\r\n    //notification values;\r\n    let notificationsValues = verifyNotificationSettings(parkNotification, eventsNotification, salesNotification, servicesNotification, lostfoundNotification);\r\n    let nullResponse = notificationsValues[5];\r\n    let isPark = notificationsValues[0];\r\n    let isEvents = notificationsValues[1];\r\n    let isSales = notificationsValues[2];\r\n    let isServices = notificationsValues[3];\r\n    let isLostFound = notificationsValues[4];\r\n\r\n    if (nullResponse == true) {\r\n      setErrorNotification('Please fill in all fields')\r\n    }\r\n    else {\r\n      const response = await registerUser(firstName, lastName, parseInt(lotNumber), password, passwordVerify, userName, primary_phone, secondary_phone, is_owner, is_renter, is_board_member, is_park_management, is_admin, picture, isPark, isEvents, isSales, isServices, isLostFound);\r\n      console.log(response)\r\n      if (response !== \"Network Error\" && typeof response !== 'string') {\r\n\r\n        console.log(response.data.status)\r\n        if (response.data.status === \"SUCCESS\") {\r\n          // Successfull\r\n          //                        this.props.props.history.goBack();\r\n          message.success(\"Account Succesfully Created\")\r\n          handleClose4()\r\n          clearData()\r\n        } else {\r\n          // Error\r\n          message.error(\"Error adding post to server\")\r\n        }\r\n      } else {\r\n        message.error(\"Server is down\")\r\n      }\r\n    }\r\n  }\r\n\r\n  //handles closing the login page and opening the registration\r\n  function goToRegister() {\r\n    handleClose();\r\n    handleShow2();\r\n    setErrorMessage('');\r\n    setErrorRegistration('');\r\n  }\r\n\r\n  function goToRegister2() {\r\n    handleClose3();\r\n    handleShow2();\r\n    setErrorMessage('');\r\n    setErrorRegistration('');\r\n  }\r\n\r\n  function goToLogin() {\r\n    handleClose2();\r\n    handleShow();\r\n        setErrorMessage('');\r\n            setErrorRegistration('');\r\n  }\r\n\r\n  function goToLogin2() {\r\n    handleClose3();\r\n    handleShow();\r\n        setErrorMessage('');\r\n            setErrorRegistration('');\r\n  }\r\n\r\n  function goToNotification() {\r\n    handleClose2();\r\n    handleShow4();\r\n        setErrorMessage('');\r\n            setErrorRegistration('');\r\n  }\r\n\r\n  function goToReset() {\r\n    handleClose();\r\n    handleShow3();\r\n    setErrorMessage('');\r\n        setErrorRegistration('');\r\n  }\r\n\r\n  //clears out all the data in the form upon closing the form\r\n  function handleLoginClose() {\r\n    handleClose();\r\n    setUserName('');\r\n    setPassword('');\r\n    setErrorMessage('');\r\n  }\r\n\r\n  //clears out all the data in the form upon closing the form\r\n  function handleRegistrationClear() {\r\n    handleClose2();\r\n    setUserName('');\r\n    setPassword('');\r\n    setLotNumber('');\r\n    setFirstName('');\r\n    setLastName('');\r\n    setPasswordVerify('');\r\n    setErrorRegistration('');\r\n  }\r\n\r\n  //logout function\r\n  function Logout() {\r\n    //clearing local storage\r\n    localStorage.clear();\r\n\r\n    //making login visible, and profile invisible\r\n    setShowLogin(!showLogin)\r\n    setShowProfile(!showProfile)\r\n\r\n    //logout message\r\n    message.success(\"Logout Successful.\", 5)\r\n  }\r\n\r\n  function onValueChange(event) {\r\n    this.setState({\r\n      selectedOption: event.target.value\r\n    });\r\n  }\r\n\r\n  //radio button usage\r\n  function useRadioButtons(name) {\r\n    const [value, setState] = useState(null);\r\n\r\n    const handleChange = e => {\r\n      //       console.log(e.target.value)\r\n      setState(e.target.value);\r\n    };\r\n\r\n    const inputProps = {\r\n      name,\r\n      type: \"radio\",\r\n      onChange: handleChange\r\n    };\r\n\r\n    //    console.log(value + inputProps)\r\n    return [value, inputProps];\r\n  }\r\n\r\n  const handleShowLogout = () => {\r\n    setShowLogout(!showLogout);\r\n  };\r\n\r\n  const handleShowName = () => {\r\n    setShowLogout(!showLogout);\r\n    // history.push(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* login and profile */}\r\n\r\n      <div className={styles.profile}>\r\n        {showLogin && (\r\n          <div className={\"logInRegister\"}>\r\n            <a href=\"#\" onClick={handleShow}>\r\n              Log In\r\n            </a>\r\n            <h3>or</h3>\r\n            <a href=\"#\" onClick={handleShow2}>\r\n              Register\r\n            </a>\r\n            <img src={profile_icon} className={styles.profile_icon} alt=\"profile_icon\" onClick={handleShow} display=\"hidden\"/>\r\n          </div>\r\n        )}\r\n        {showProfile && (\r\n          <div>\r\n            {/* <a href={\"home\"} onClick={Logout}>Logout</a> */}\r\n            {/* <h3\r\n              onClick={() => handleProfileChange()}\r\n              className={styles.profileName}\r\n            >\r\n              {name}\r\n            </h3> */}\r\n            {/* <img src={ThreeDots} className=\"three_dots\" alt=\"three_dots\" /> */}\r\n            <div onClick={() => handleShowLogout()}>\r\n              <h4 className={styles.profileName} margin-right=\"20px\">{name}</h4>\r\n              {/* <img src={three_dots} className=\"three_dots\" alt=\"three_dots\" /> */}\r\n              <img src={profile_icon} className={styles.profile_icon} alt=\"profile_icon\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showLogout && (\r\n          <div onClick={() => handleShowName()} >\r\n            <h4 className={styles.goBack}>\r\n              Go Back\r\n              &ensp;\r\n            </h4>\r\n              <img src={three_dots} className={styles.three_dots} alt=\"three_dots\" />\r\n            {/* <a href=\"#\" onClick={handleShow}>\r\n              Log In\r\n            </a> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={handleLoginClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login Form</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <h5 className='error'>{errorMessage}</h5>\r\n          <Form.Group id=\"loginForm\" >\r\n            <Form.Label>Username: </Form.Label>\r\n            <Form.Control type=\"text\" onChange={e => { setUserName(e.target.value) }} value={userName} />\r\n            <Form.Label>Password: </Form.Label>\r\n            <Form.Control type=\"password\" onChange={e => { setPassword(e.target.value) }} value={password} />\r\n          </Form.Group>\r\n          <a href=\"#\" className=\"access_links\" onClick={goToReset}>\r\n            Forgot your password?\r\n          </a>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          \r\n          <Button variant=\"primary\" type=\"submit\" onClick={() => verifyLogin()}>\r\n            <span className=\"login_button\">Submit</span>\r\n          </Button>\r\n          Not a member?{\" \"}\r\n          <a className=\"access_links\" href=\"#\" onClick={goToRegister}>\r\n            Register here!\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* modal form  for registration*/}\r\n\r\n      <Modal show={showModal2} onHide={handleRegistrationClear}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Registration Form</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {<p className='error'>{errorMessageRegistration}</p>}\r\n          <Form.Group id=\"registrationForm\" >\r\n            <div class=\"modal-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-60\">\r\n                  <Form.Label>First Name: </Form.Label>\r\n                  <Form.Control type=\"text\" onChange={e => { setFirstName(e.target.value) }} value={firstName} />\r\n                  <Form.Label>Lot# </Form.Label>\r\n                  <Form.Control type=\"number\" onChange={e => { setLotNumber(e.target.value) }} value={lotNumber} />\r\n                  <Form.Label>Password: </Form.Label>\r\n                  <Form.Control type=\"password\" onChange={e => { setPassword(e.target.value) }} value={password} />\r\n                  {/* <Form.Label>Primary Phone Number: </Form.Label>\r\n                  <Form.Control type=\"number\" onChange={e => { setPrimary(e.target.value) }} value={primaryPhone} /> */}\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <Form.Label>Last Name: </Form.Label>\r\n                  <Form.Control type=\"text\" onChange={e => { setLastName(e.target.value) }} value={lastName} />\r\n                  <Form.Label>Email: </Form.Label>\r\n                  <Form.Control type=\"email\" onChange={e => { setUserName(e.target.value) }} value={userName} />\r\n                  <Form.Label>Password Confirmation: </Form.Label>\r\n                  <Form.Control type=\"password\" onChange={e => { setPasswordVerify(e.target.value) }} value={passwordVerify} />\r\n                 {/* <Form.Label>Secondary Phone Number: </Form.Label>\r\n                 <Form.Control type=\"number\" onChange={e => { setSecondary(e.target.value) }} value={secondaryPhone} /> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                Do you own a lot at the park?\r\n                       </div>\r\n              <div class=\"col-md-6\">\r\n                <fieldset>\r\n\r\n                    <input\r\n                    value=\"yes\"\r\n                    checked={ownership === \"yes\"}\r\n                    {...setOwnership}\r\n                     />\r\n                     Yes\r\n                     &ensp;\r\n\r\n                     <input\r\n                    value=\"no\"\r\n                    checked={ownership === \"no\"}\r\n                    {...setOwnership}\r\n                  />\r\n                  No\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/*{<p className='error'>{errorMessageRegistration}</p>}*/}\r\n          <Button variant=\"primary\" type=\"submit\" onClick={() => verifyRegistration()}>\r\n                        <span className=\"login_button\">Log in</span>\r\n                        </Button>\r\n                          Already have an account? <a className=\"access_links\" href=\"#\" onClick={goToLogin}>Login here!</a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* modal form  for password reset*/}\r\n\r\n      <Modal show={showModal3} onHide={handleClose3}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Reset Password</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form.Group id=\"resetForm\" >\r\n            <Form.Label>Enter your email address: </Form.Label>\r\n            <Form.Control type=\"text\" onChange={e => { setUserName(e.target.value) }} value={userName} />\r\n          </Form.Group>\r\n          <a className=\"access_links\" href=\"#\" onClick={goToLogin2}>Login Here!</a>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/*<p className='error'>{errorMessage}</p> */}\r\n          <Button variant=\"primary\" type=\"submit\" onClick={() => verifyLogin()}>\r\n                        <span className=\"login_button\">Submit</span>\r\n                          </Button>\r\n                            Not a member? <a className=\"access_links\" href=\"#\" onClick={goToRegister2}>Register here!</a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* notification settings */}\r\n\r\n      <Modal show={showModal4} onHide={handleClose4}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Notification Settings</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                <p className='error'>{errorMessageNotification}</p>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div> Show Park Documents </div>\r\n              <div> Events </div>\r\n              <div> For Sale or Rent </div>\r\n              <div> Services </div>\r\n              <div> Lost or Found </div>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div>\r\n                <fieldset>\r\n\r\n                                                                                 <input\r\n                    value=\"yes\"\r\n                    checked={parkNotification === \"yes\"}\r\n                    {...setParkNotifications}\r\n                  />\r\n                  Yes\r\n                                                                            &emsp;\r\n\r\n                                                                                 <input\r\n                    value=\"no\"\r\n                    checked={parkNotification === \"no\"}\r\n                    {...setParkNotifications}\r\n                  />\r\n                  No\r\n                </fieldset>\r\n              </div>\r\n              <div>\r\n                <fieldset>\r\n\r\n                                                                                 <input\r\n                    value=\"yes\"\r\n                    checked={eventsNotification === \"yes\"}\r\n                    {...setEventNotifications}\r\n                  />\r\n                  Yes\r\n                                                                            &emsp;\r\n\r\n                                                                                 <input\r\n                    value=\"no\"\r\n                    checked={eventsNotification === \"no\"}\r\n                    {...setEventNotifications}\r\n                  />\r\n                  No\r\n                </fieldset>\r\n              </div>\r\n              <div>\r\n                <fieldset>\r\n\r\n                                                                                 <input\r\n                    value=\"yes\"\r\n                    checked={salesNotification === \"yes\"}\r\n                    {...setSaleNotification}\r\n                  />\r\n                  Yes\r\n                                                                            &emsp;\r\n\r\n                                                                                 <input\r\n                    value=\"no\"\r\n                    checked={salesNotification === \"no\"}\r\n                    {...setSaleNotification}\r\n                  />\r\n                  No\r\n                </fieldset>\r\n              </div>\r\n              <div>\r\n                <fieldset>\r\n\r\n                                                                                 <input\r\n                    value=\"yes\"\r\n                    checked={servicesNotification === \"yes\"}\r\n                    {...setServicesNotification}\r\n                  />\r\n                  Yes\r\n                                                                            &emsp;\r\n\r\n                                                                                 <input\r\n                    value=\"no\"\r\n                    checked={servicesNotification === \"no\"}\r\n                    {...setServicesNotification}\r\n                  />\r\n                  No\r\n                </fieldset>\r\n              </div>\r\n              <div>\r\n                <fieldset>\r\n\r\n                                                                                 <input\r\n                    value=\"yes\"\r\n                    checked={lostfoundNotification === \"yes\"}\r\n                    {...setLostFoundNotification}\r\n                  />\r\n                  Yes\r\n                                                                            &emsp;\r\n\r\n                                                                                 <input\r\n                    value=\"no\"\r\n                    checked={lostfoundNotification === \"no\"}\r\n                    {...setLostFoundNotification}\r\n                  />\r\n                  No\r\n                </fieldset>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/*<p className='error'>{errorMessageNotification}</p> */}\r\n          <Button variant=\"primary\" type=\"submit\" onClick={() => verifyNotification()}>\r\n                        <span className=\"login_button\">Submit</span>\r\n                             </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile;","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NaviMenu\\logo.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\HomePage\\pictureShowSlide.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\NotificationBell.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\CreateEvent\\eventModal.js",["340"],"import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nimport '../detailModal.css'\r\n\r\n\r\nclass DisplayEventInfo extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      content: {},\r\n      isOpen: true,\r\n      creator: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    \r\n    this.setState({ content: this.props.displayEvent });\r\n    this.setState({creator: this.state.content.creator})\r\n    // console.log(this.props.displayEvent.descSubcategory.name)\r\n  }\r\n\r\n  render() {\r\n\r\n    // console.log(this.content)\r\n    return (\r\n      <>\r\n        <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>SUCCESS!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n\r\n              < span className='det_description'>{this.state.content.description}. There are only three ways to make this work. The first is to let me take care of everything. The second is for you to take care of everything. The third is to split everything 50 / 50. I think the last option is the most preferable, but I'm certain it'll also mean the end of our marriage.</span>\r\n\r\n\r\n              <div className='det_inline_block_shedule'>\r\n                <div className='det_con_det_time'>\r\n                  <span className='det_start_time'>\r\n                    Start time: {this.state.content.startTime}\r\n                  </span>\r\n                  <br />\r\n                  <span className='det_end_time'>\r\n                    End time: {this.state.content.endTime}\r\n                  </span>\r\n                </div>\r\n                <div className='det_con_frequency'>\r\n                  test\r\n                  {this.state.content.recurring ?\r\n                    <span className='det_frequency'>test{this.state.content.recurFrequency}</span>\r\n                    : null\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <div className='det_sec_categories'>\r\n                <div className='det_con_category'>\r\n                  <span className='det_category'>Category: {this.props.displayEvent.descSubcategory.name}</span>\r\n                </div>\r\n                <div className='det_con_location'>\r\n                  <span className='det_location'>Location: {this.props.displayEvent.locationSubcategory.name}</span>\r\n                </div>\r\n              </div> \r\n\r\n              {/* Last Line */}\r\n              <div className='det_sec_end'>\r\n                <div className='det_con_qFile'>\r\n                  {this.props.displayEvent.fileURL ?\r\n                    <a className='det_link' target=\"_blank\"  href={this.props.displayEvent.fileURL}>File attached</a>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className='det_con_posted'>\r\n                  <span className='det_posted'>Posted: {this.props.displayEvent.creator.name}</span>\r\n                </div>\r\n              </div> \r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" className='det_done_button' onClick={this.closeModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  closeModal = (arg) => {\r\n    this.props.onCloseWindow(arg);\r\n  }\r\n}\r\n\r\nexport default DisplayEventInfo;","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\SearchMenu\\actionMenu.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\Calendar\\EventCalendar.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\ajaxLog.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\ajax.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Detail\\index.jsx",["341","342","343"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Home\\index.jsx",["344","345","346","347"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\AddUpdate\\index.jsx",["348","349"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Home\\index.jsx",["350","351","352","353","354"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\AddUpdate\\index.jsx",["355","356"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Settings\\UserInfo\\index.jsx",["357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Home\\index.jsx",["371","372","373","374","375","376","377","378","379"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Detail\\index.jsx",["380","381","382"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Detail\\index.jsx",["383","384","385","386"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\AddUpdate\\index.jsx",["387","388"],"// Import dependancies\r\nimport { useEffect, useState } from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NotificationBell from \"../../../Components/NotificationBell\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Select from \"react-select\";\r\nimport { Card } from 'antd';\r\n\r\nimport ConfirmationModal from './confirmationModal'\r\nimport { UploadFile } from '../../../api/FileUpload/fileupload'\r\n\r\n// API calls\r\nimport { fetchSubCategories } from '../../../api/apifunction'\r\n\r\n// Css files\r\nimport 'antd/dist/antd.css';\r\nimport './add_update.css';\r\n\r\n\r\n/**\r\n * Forum Component that handles creating and update sale or rent posts\r\n * \r\n * @author Charles Breton\r\n * @param {*} props info about post\r\n * @returns Sale and Rent AddUpdate Page\r\n */\r\nexport default function AddUpdate(props) {\r\n    // State of component [UPDATE, CREATE]\r\n    const [state, setState] = useState(\"CREATE\");\r\n\r\n    // Setting up category\r\n    const [sortedCategories, setSortedCategories] = useState([]);\r\n\r\n    const [rawData, setRawData] = useState([]);\r\n    // Forum Items\r\n    const [forumTitle, setForumTitle] = useState(\"\");\r\n    const [forumDesc, setForumDesc] = useState(\"\");\r\n    const [forumFile, setForumFile] = useState([]);\r\n    const [forumType, setForumType] = useState(\"\");\r\n    const [confirmationInfo, setConfirmationInfo] = useState();\r\n\r\n    // Show confirmaiton post\r\n    const [confirmPost, setConfirmPost] = useState(false);\r\n\r\n    // Error messages\r\n    const [errorMessage, setErrorMessage] = useState();\r\n\r\n\r\n\r\n    // Load initial data\r\n    useEffect(() => {\r\n\r\n        // Determine if we are trying to update post\r\n        if (typeof props.history.location.state !== 'undefined') {\r\n\r\n\r\n            // Set state for all data\r\n            const data = props.history.location.state\r\n            setRawData(data)\r\n            setForumTitle(data.title)\r\n            setForumDesc(data.details)\r\n\r\n            // Handle category drop-down standard\r\n            const formatForumType = {\r\n                value: data.type,\r\n                label: data.type\r\n            };\r\n            setForumType(formatForumType)\r\n\r\n            // Handle Images\r\n            if (typeof props.history.location.state !== 'undefined') {\r\n                setForumFile(data.file)\r\n            }\r\n\r\n            // Set state to update\r\n            setState(\"UPDATE\");\r\n        }\r\n        fetchCategories();\r\n\r\n    }, [])\r\n\r\n\r\n    // Fetch different categories for drop-down menu\r\n    const fetchCategories = async () => {\r\n        let categoriesList = [];\r\n        const response = await fetchSubCategories(localStorage.getItem(\"forum_cat_id\"))\r\n        try {\r\n            if (response !== \"Network Error\") {\r\n                if (response.status === \"SUCCESS\" && response.data !== null) {\r\n                    // Pass data to get standard format \r\n                    formatCategories(response.data)\r\n                } else {\r\n                    setErrorMessage(\"Fetching wasn't successfull\")\r\n                }\r\n            } else {\r\n                setErrorMessage(\"Error with connecting to backend\")\r\n            }\r\n        } catch (error) { }\r\n    }\r\n\r\n    // Format fetched sub-categories\r\n    const formatCategories = (data) => {\r\n        // console.log(data)\r\n        let formattedList = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            let object = {\r\n                value: data[i].id,\r\n                label: data[i].name\r\n            };\r\n            formattedList.push(object)\r\n\r\n        }\r\n        // Set state of categories\r\n        setSortedCategories(formattedList)\r\n    }\r\n\r\n    // Check data is valid before showing confirmation modal\r\n    const checkData = () => {\r\n        let valid = true;\r\n\r\n        if (forumTitle === \"\" || forumTitle.length > 255) {\r\n            valid = false;\r\n            setErrorMessage(\"Error occurred at title\")\r\n        }\r\n        else if (forumDesc === \"\") {\r\n            valid = false;\r\n            setErrorMessage(\"Error occurred at description\")\r\n        }\r\n        // else if (forumFile === \"\") {\r\n        //     valid = false;\r\n        //     setErrorMessage(\"Error occurred at file\")\r\n        // }\r\n        else if (forumType === \"\") {\r\n            valid = false;\r\n            setErrorMessage(\"Error occurred at category\")\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n\r\n    // Open up modal to confirm post submition\r\n    const handleSubmit = () => {\r\n        // Determine if data entries is valid\r\n        const check = checkData();\r\n\r\n        // If pass check question object will all data entered\r\n        if (check) {\r\n\r\n            let info = []\r\n            info.push(forumTitle);\r\n            info.push(forumDesc)\r\n            info.push(forumFile)\r\n            info.push(forumType)\r\n\r\n            // console.log(info)\r\n            setConfirmationInfo(info)\r\n            setErrorMessage(\"\")\r\n            openModal()\r\n        }\r\n    }\r\n\r\n    // Handle opening confirmation modal\r\n    const openModal = () => {\r\n        setConfirmPost(!confirmPost)\r\n    }\r\n\r\n    // Handle closing confirmation modal\r\n    const onCloseWindow = () => {\r\n        setConfirmPost(false);\r\n    };\r\n\r\n    // Handle Logic for header is we are updating or creating a post\r\n    const HeaderType = () => {\r\n        if (state === \"UPDATE\") {\r\n            return (\r\n                <span> POST UPDATING</span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span> POST CREATION</span>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    // Header of the page and link to go back to main section page\r\n    const title = (\r\n        <span>\r\n            <NavLink to=\"/forum\" exact className=\"backToEvent\">\r\n                FORUM\r\n            </NavLink>\r\n            <h1> {\">\"} </h1>\r\n            <NavLink to=\"/forum/addupdate\" exact className=\"currPage\">\r\n                <HeaderType />\r\n            </NavLink>\r\n\r\n            <NotificationBell />\r\n        </span>\r\n    );\r\n\r\n    // Handling Upload return data\r\n    const handleUpload = (data) => {\r\n        setForumFile(data)\r\n    }\r\n\r\n    // Render component\r\n    return (\r\n        <Card title={title}>\r\n            {/* Confirmation Modal [true / false]  */}\r\n            {confirmPost ?\r\n                <ConfirmationModal onCloseWindow={onCloseWindow} displayPost={confirmationInfo} props={props} rawData={rawData} />\r\n                : null\r\n            }\r\n\r\n            {/* Error Message Display */}\r\n            <span className='error_message'>{errorMessage}</span>\r\n\r\n            {/* First Row */}\r\n            <Form.Row className=\"first_row\">\r\n                <Form.Group className=\"col-md-8\">\r\n                    <h5>TITLE</h5>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-4\">\r\n                    <h5>CATEGORY</h5>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-8\">\r\n                    <Form.Control\r\n                        placeholder=\"FORUM TITLE\"\r\n                        className=\"forumTitle\"\r\n                        id=\"forumTitle\"\r\n                        fluid='true'\r\n                        value={forumTitle}\r\n                        onChange={(event) => setForumTitle(event.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-4\">\r\n                    <Select\r\n                        className='drop-box'\r\n                        placeholder=\"CATEGORY\"\r\n                        options={sortedCategories}\r\n                        id=\"location\"\r\n                        fluid='true'\r\n                        value={forumType}\r\n                        onChange={(event) => setForumType(event)}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            {/* Second Row */}\r\n            <Form.Row>\r\n                <Form.Group className=\"col-md-6\">\r\n                    <h5>DESCRIPTION</h5>\r\n                </Form.Group>\r\n                <Form.Group className=\"col-md-12 descriptionGroup\">\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"7\"\r\n                        fluid='true'\r\n                        placeholder=\"DESCRIPTION\"\r\n                        className=\"description\"\r\n                        id=\"description\"\r\n                        value={forumDesc}\r\n                        onChange={(event) => setForumDesc(event.target.value)}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n\r\n            {/* Third Row */}\r\n            <Form.Row >\r\n                <Form.Group className=\"col-md-6\">\r\n                    <h5>UPLOAD IMAGES</h5>\r\n                    <UploadFile onUpload={handleUpload} />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            {/* Confirmation Button */}\r\n            <Form.Row>\r\n                <Button type=\"button\" onClick={() => handleSubmit()} className=\"confirmBtn\">\r\n                    <span className=\"confirmBtn_header\">CONFIRM</span>\r\n                    </Button>\r\n            </Form.Row>\r\n        </Card>\r\n    )\r\n}","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\AddUpdate\\index.jsx",["389"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Home\\index.jsx",["390","391","392","393","394","395","396"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\AccountsDetails\\index.jsx",["397","398","399","400","401","402","403"],"\r\n//Imports \r\nimport Button from \"react-bootstrap/Button\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card, List, Table, message } from 'antd'\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// API calls\r\nimport { getUsers, getCategories } from '../../../api/apifunction'\r\n\r\n// Css file\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport './styling.css';\r\n\r\nconst Item = List.Item;\r\n\r\n\r\n/**\r\n * Component about Accounts Details in Admin section\r\n * \r\n * @author Charles Breton\r\n * @returns Accounts Details Home Page\r\n */\r\nexport default function AccountsDetails() {\r\n\r\n    // State of website\r\n    const history = useHistory();\r\n\r\n\r\n    //define table columns\r\n    const [columnsUsers, setColumnsUsers] = useState([]);\r\n    const [columnsApprove, setColumnsApprove] = useState([]);\r\n\r\n    const [approvedUsers, setApprovedUsers] = useState([]);\r\n    const [unapprovedUsers, setUnapprovedUsers] = useState([]);\r\n\r\n    //search parameter\r\n    const [param, setParam] = useState(\"\");\r\n    //filter by sub-category\r\n    const [subId, setSubId] = useState(\"\");\r\n    //define the filter date\r\n    const [date, setDate] = useState(\"\");\r\n\r\n    // Initial functions calls\r\n    useEffect(() => {\r\n        //fetch data from the server API\r\n        fetchUsers(param, subId, date);\r\n        //initialize the table columns\r\n        initializeColumns();\r\n    },\r\n        //acts ac componentDidMount, the callback function will only be executed once after the first rendering\r\n        []);\r\n\r\n    // Update user list [FOR FUTURE IMPLEMENTATION]\r\n    useEffect(() => {\r\n        //fetch data from the server API\r\n        fetchUsers(param, subId, date);\r\n        //initialize the table columns\r\n        initializeColumns();\r\n    }, [param, subId, date]);\r\n\r\n    // Fetch users\r\n    const fetchUsers = async (name, subId, date) => {\r\n        let response;\r\n\r\n        // Fetch users info [capable to add search feature in the future]\r\n        if (name === \"\" && subId === \"\" && date === \"\") {\r\n            response = await getUsers();\r\n        }\r\n        //otherwise, search by parameter, sub-category, and a specific date\r\n        else {\r\n            // response = await searchLogs(name, subId, date);\r\n        }\r\n        try {\r\n            if (response !== \"Network Error\" && typeof response !== 'undefined') {\r\n                if (response.data.status === \"SUCCESS\") {\r\n                    if (response.data.data !== null) {\r\n                        filterUsers(response.data.data);\r\n                    } else { }\r\n                } else {\r\n                    message.error(response.data.message);\r\n                }\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    // Filter users based off being approved or unapproved to display them in different categories\r\n    const filterUsers = (data) => {\r\n        let approvedUsersList = []\r\n        let unapprovedUsersList = []\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].unapproved === false) {\r\n                approvedUsersList.push(data[i])\r\n            } else {\r\n                unapprovedUsersList.push(data[i])\r\n            }\r\n\r\n        }\r\n        setUnapprovedUsers(unapprovedUsersList)\r\n        setApprovedUsers(approvedUsersList)\r\n    }\r\n\r\n    // initialize the table columns for approving users section\r\n    function initializeColumns(type) {\r\n        const columnsApprove = [\r\n            //first column\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'email'\r\n            },\r\n            //second column\r\n            {\r\n                title: 'First Name',\r\n                dataIndex: 'firstName'\r\n            },\r\n            // third column\r\n            {\r\n                title: 'Last Name',\r\n                dataIndex: 'lastName'\r\n            },\r\n            // fourth column\r\n            {\r\n                title: 'Action',\r\n                width: 200,\r\n                dataIndex: '',\r\n                key: 'x',\r\n                render: (user) =>\r\n                    <span>\r\n                        <Button\r\n                            // go to the detail page and pass product to it\r\n                            className={\"viewInfoBtn\"}\r\n                            onClick={() => history.push(\"/admin/accountsDetails/userInfo\", user, \"APPROVE\")}>\r\n                            View Info\r\n                        </Button>\r\n                    </span>\r\n            },\r\n        ];\r\n\r\n        // initialize the table columns for users section\r\n        const columnsUsers = [\r\n            //first column\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'email'\r\n            },\r\n            //second column\r\n            {\r\n                title: 'First Name',\r\n                dataIndex: 'firstName'\r\n            },\r\n            // third column\r\n            {\r\n                title: 'Last Name',\r\n                dataIndex: 'lastName'\r\n            },\r\n            // fourth column\r\n            {\r\n                title: 'Action',\r\n                width: 200,\r\n                dataIndex: '',\r\n                key: 'x',\r\n                render: (user) =>\r\n                    <span>\r\n                        <Button\r\n                            // go to the detail page and pass product to it\r\n                            className={\"viewInfoBtn\"}\r\n                            onClick={() => history.push(\"/admin/accountsDetails/userInfo\", user, \"UPDATE\")}>\r\n                            View Info\r\n                        </Button>\r\n                    </span>\r\n            },\r\n        ];\r\n        setColumnsApprove(columnsApprove);\r\n        setColumnsUsers(columnsUsers);\r\n    }\r\n\r\n    // Ensure page doesn't update when pressing on Users Details header\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    // Header of the page and link to go back to main section page\r\n    const main_title = (\r\n        <span>\r\n            {/* Header title with link */}\r\n            <div>\r\n                <NavLink to=\"/\" onClick={handleClick} exact className=\"backToHome\">\r\n                    ADMIN\r\n                </NavLink>\r\n                <h1> {\">\"} </h1>\r\n                <NavLink to=\"/admin/accountsDetails\" exact className=\"currPage\">\r\n                    USERS DETAILS\r\n            </NavLink>\r\n            </div>\r\n\r\n            {/* Search feature and add forum post */}\r\n            <div className=\"forum_search_feature\">\r\n                {/* <Search className=\"forum_search_box\" placeholder=\"Search for post\" onSearch={value => searchPost(value)} /> */}\r\n\r\n\r\n                {/* <DatePicker className=\"forum_date_picker\" onChange={(date, dateString) => console.log(\"WORKING\")} /> */}\r\n\r\n                {/* Button for adding forum post */}\r\n                {/* <Button className=\"forum_create_post_button\" type='primary'\r\n                    onClick={() => props.history.push('/saleAndRent/addupdate')}>\r\n                    <PlusOutlined />\r\n                     Add\r\n                </Button> */}\r\n            </div>\r\n        </span>\r\n    );\r\n\r\n    // Sub-Headers\r\n    const unapproved_title = (\r\n\r\n        <div>\r\n            <h2>UNAPPROVED USERS</h2>\r\n        </div>\r\n    );\r\n\r\n    // Sub-Headers\r\n    const approved_title = (\r\n        <div>\r\n            <h2>APPROVED USERS</h2>\r\n        </div>\r\n    );\r\n\r\n    // Render component\r\n    return (\r\n        <>\r\n            <Card title={main_title}>\r\n                <Card title={unapproved_title} >\r\n                    <Table\r\n                        bordered\r\n                        rowKey='id'\r\n                        pagination={{ pageSize: 4, showQuickJumper: true, showSizeChanger: true }}\r\n                        //set the table column names\r\n                        columns={columnsApprove}\r\n                        //load the park documents\r\n                        dataSource={unapprovedUsers}\r\n                    >\r\n                    </Table>\r\n                </Card>\r\n                <Card title={approved_title}>\r\n                    <Table\r\n                        bordered\r\n                        rowKey='id'\r\n                        pagination={{ pageSize: 10, showQuickJumper: true, showSizeChanger: true }}\r\n                        //set the table column names\r\n                        columns={columnsUsers}\r\n                        //load the park documents\r\n                        dataSource={approvedUsers}\r\n                    >\r\n\r\n                    </Table>\r\n                </Card>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\AccountsDetails\\Details\\index.jsx",["404","405","406","407"],"\r\n// Imports\r\nimport React , { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { Card, List, message } from 'antd'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// API calls\r\nimport { getUserInfo, postUserInfo } from '../../../../api/apifunction'\r\n\r\n// Css files\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst Item = List.Item;\r\n\r\n/**\r\n *  Account Detail Component that handles updating accounts info\r\n * \r\n * @param {*} props info about state of pages use for Routing purposes\r\n * @returns User Details Page\r\n */\r\nexport default function UserInfo(props) {\r\n    // State of website\r\n    const history = useHistory();\r\n    \r\n    // Post info\r\n    const id = props.history.location.state.id\r\n    const [userData, setUserData] = useState();\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [lotNumber, setLotNumber] = useState([]);\r\n    \r\n    // Access types\r\n    const [approvedAccount, setApprovedAccount] = useState('');\r\n    const [visitorAccess, setVisitorAccess] = useState(false);\r\n    const [renterAccess, setRenterAccess] = useState(false);\r\n    const [ownerAccess, setOwnerAccess] = useState(false);\r\n    \r\n    // Permisions \r\n    const [parkManagementAccess, setParkManagementAccess] = useState(false);\r\n    const [boardMemberAccess, setBoardMemberAccess] = useState(false);\r\n    const [adminAccess, setAdminAccess] = useState(false);\r\n    \r\n    const [rolesLoaded, setRolesLoaded] = useState(false)\r\n    const [infoChanged, setInfoChanged] = useState(false)\r\n    \r\n    // Error Message\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    \r\n    // Initial function when first loading\r\n    useEffect(() => {\r\n        fetchUserInfo()\r\n    }, []);\r\n\r\n    // Ensure atleast some data is changed before being able to update user\r\n    useEffect(() => {\r\n        setInfoChanged(true)\r\n    }, [email, firstName, lastName, lotNumber, renterAccess, ownerAccess, approvedAccount, parkManagementAccess, boardMemberAccess, adminAccess]);\r\n\r\n    // Fetch users info using id\r\n    const fetchUserInfo = async () => {\r\n        const response = await getUserInfo(id)\r\n        try {\r\n            if (response !== \"Network Error\") {\r\n                console.log(response.data)\r\n                if (response.data.status === \"SUCCESS\" && response.data.data !== null) {\r\n                    setUserData(response.data.data)\r\n                    loadUserFields(response.data.data)\r\n                } else {\r\n                    message.error(\"Fetching wasn't successfull\")\r\n                }\r\n            } else {\r\n                message.error(\"Error with connecting to backend\")\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    // Set state for different users info after fetch call\r\n    const loadUserFields = (data) => {\r\n        setEmail(data.email)\r\n        setFirstName(data.firstName)\r\n        setLastName(data.lastName)\r\n        \r\n        // Can have multiple lot number\r\n        let lot_number = JSON.stringify(data.lotNo)\r\n        lot_number = lot_number.replace('[', '')\r\n        lot_number = lot_number.replace(']', '')\r\n        setLotNumber(lot_number)\r\n\r\n        setRenterAccess(data.renter)\r\n        setOwnerAccess(data.owner)\r\n        console.log(data.owner)\r\n\r\n        setApprovedAccount(!data.unapproved)\r\n        setParkManagementAccess(data.parkManagement)\r\n        setBoardMemberAccess(data.boardMember)\r\n        setAdminAccess(data.admin)\r\n\r\n        setRolesLoaded(true)\r\n        setInfoChanged(false)\r\n    }\r\n\r\n     // Ensure page doesn't update when pressing on Users Details header\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    // Header of the page and link to go back to main section page\r\n    const title = (\r\n        <span>\r\n            <NavLink to=\"/\" onClick={handleClick} exact className=\"backToEvent\">\r\n                ADMIN\r\n            </NavLink>\r\n            <h1> {\">\"} </h1>\r\n\r\n            <NavLink to=\"/admin/accountsDetails\" exact className=\"currPage\">\r\n                USER DETAILS\r\n            </NavLink>\r\n            <h1> {\">\"} </h1>\r\n            <NavLink to=\"/forum/addupdate\" onClick={handleClick} exact className=\"currPage\">\r\n                USER INFO\r\n            </NavLink>\r\n\r\n        </span>\r\n    );\r\n\r\n    // Component about checkbox for general roles and privileges\r\n    const RolesInfoDisplay = () => {\r\n        return (\r\n            <div>\r\n                <Form.Group className=\"col-md-12\">\r\n                    <h5>GENERAL ROLES</h5>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-12\">\r\n                    <span className=\"col-md-3\">\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                            Visitor\r\n                        </label>\r\n                        &emsp;&emsp;\r\n                        <input className=\"form-check-input\" type=\"checkbox\" defaultChecked={visitorAccess} onChange={() => setVisitorAccess(!visitorAccess)} />\r\n                    </span>\r\n                    <span className=\"col-md-3\">\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                            Renter\r\n                        </label>\r\n                        &emsp;&emsp;\r\n                        <input className=\"form-check-input\" type=\"checkbox\" defaultChecked={renterAccess} onChange={() => setRenterAccess(!renterAccess)} />\r\n                    </span>\r\n                    <span className=\"col-md-3\">\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                            Owner\r\n                        </label>\r\n                        &emsp;&emsp;\r\n                        <input className=\"form-check-input\" type=\"checkbox\" defaultChecked={ownerAccess} onChange={() => setOwnerAccess(!ownerAccess)} />\r\n                    </span>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-12\">\r\n                    <h5>PRIVILEGES</h5>\r\n                </Form.Group>\r\n                <Form.Group className=\"col-md-12\">\r\n                    <span className=\"col-md-3\">\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                            Approved\r\n                        </label>\r\n                        &emsp;&emsp;\r\n                        <input className=\"form-check-input\" type=\"checkbox\" defaultChecked={approvedAccount} onChange={() => setApprovedAccount(!approvedAccount)} />\r\n                    </span>\r\n                    <span className=\"col-md-3\">\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                            Park Management\r\n                        </label>\r\n                        &emsp;&emsp;\r\n                        <input className=\"form-check-input\" type=\"checkbox\" defaultChecked={parkManagementAccess} onChange={() => setParkManagementAccess(!parkManagementAccess)} />\r\n                    </span>\r\n                    <span className=\"col-md-3\">\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                            Board Member\r\n                        </label>\r\n                        &emsp;&emsp;\r\n                        <input className=\"form-check-input\" type=\"checkbox\" defaultChecked={boardMemberAccess} onChange={() => setBoardMemberAccess(!boardMemberAccess)} />\r\n                    </span>\r\n                    <span className=\"col-md-3\">\r\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                            Admin\r\n                        </label>\r\n                        &emsp;&emsp;\r\n                        <input className=\"form-check-input\" type=\"checkbox\" defaultChecked={adminAccess} onChange={() => setAdminAccess(!adminAccess)} />\r\n                    </span>\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // Determine the type of editing (approving / updating ) users button\r\n    const HeaderType = () => {\r\n        if (props.history.location.state.unapproved) {\r\n            setInfoChanged(true)\r\n            return (\r\n                <span className=\"confirmBtn_header\">APPROVE USER</span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span className=\"confirmBtn_header\">UPDATE INFO</span>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Verify data before updating user details\r\n    const verifyData = () => {\r\n        let valid = true;\r\n\r\n        if (firstName === \"\" || firstName.length > 255) {\r\n            valid = false;\r\n            setErrorMessage(\"Missing First Name\")\r\n        }\r\n        else if (lastName === \"\" || lastName.length > 255) {\r\n            valid = false;\r\n            setErrorMessage(\"Missing Last Name\")\r\n        }\r\n        else if (lotNumber === \"\" || lastName.length > 255) {\r\n            valid = false;\r\n            setErrorMessage(\"Missing Lot Number\")\r\n        }\r\n\r\n        if (valid) {\r\n            setErrorMessage(\"\")\r\n            handleSubmit();\r\n        }\r\n    }\r\n\r\n    // Handle submitting button to update user details\r\n    const handleSubmit = async () => {\r\n        const first_name = firstName;\r\n        const last_name = lastName;\r\n        const lot_no = JSON.parse(\"[\" + lotNumber + \"]\");\r\n        const is_owner = ownerAccess;\r\n        const is_renter = renterAccess;\r\n        const is_board_member = boardMemberAccess;\r\n        const is_park_management = parkManagementAccess;\r\n        const is_admin = adminAccess;\r\n        const is_visitor = visitorAccess;\r\n        const is_unapproved = !approvedAccount;\r\n\r\n        const response = await postUserInfo(id, first_name, last_name, lot_no, is_owner, is_renter, is_board_member, is_park_management, is_admin, is_visitor, is_unapproved);\r\n\r\n        try {\r\n            if (response !== \"Network Error\") {\r\n                if (response.data.status === \"SUCCESS\") {\r\n                    // Successfull\r\n                    props.history.goBack();\r\n                    message.success(\"Account has been updated\")\r\n                } else {\r\n                    // Error\r\n                    message.error(\"Error adding post to server\")\r\n                }\r\n            } else {\r\n                message.error(\"Server is down\")\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card title={title}>\r\n            <span className='error_message'>{errorMessage}</span>\r\n            <Form.Row className=\"first_row\">\r\n                <Form.Group className=\"col-md-6\">\r\n                    <h5>FIRST NAME</h5>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-6\">\r\n                    <h5>LAST NAME</h5>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-6\">\r\n                    <Form.Control\r\n                        placeholder=\"User First Name\"\r\n                        className=\"userDetails\"\r\n                        id=\"userFirstName\"\r\n                        // disabled='false'\r\n                        fluid='true'\r\n                        value={firstName}\r\n                        onChange={(event) => setFirstName(event.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-6\">\r\n                    <Form.Control\r\n                        placeholder=\"User Last Name\"\r\n                        className=\"userDetails\"\r\n                        id=\"userLastName\"\r\n                        fluid='true'\r\n                        value={lastName}\r\n                        onChange={(event) => setLastName(event.target.value)}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className='second_row'>\r\n                <Form.Group className=\"col-md-6\">\r\n                    <h5>EMAIL</h5>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-6\">\r\n                    <h5>LOT</h5>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-6\">\r\n                    <Form.Control\r\n                        placeholder=\"Users Email\"\r\n                        className=\"userDetails\"\r\n                        id=\"userEmail\"\r\n                        disabled={true}\r\n                        fluid='true'\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"col-md-6\">\r\n                    <Form.Control\r\n                        placeholder=\"Users Lot Number\"\r\n                        className=\"userDetails\"\r\n                        id=\"forumTitle\"\r\n                        fluid='true'\r\n                        value={lotNumber}\r\n                        onChange={(event) => setLotNumber(event.target.value)}\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row className='third_row'>\r\n                {rolesLoaded ?\r\n                    // Need to way to load data before displaying content\r\n                    <RolesInfoDisplay />\r\n                    //   \r\n                    : null}\r\n            </Form.Row>\r\n                    <br/>\r\n            <Form.Row>\r\n                {/* Allow updating user only if info has changed */}\r\n                {infoChanged ?\r\n                    <Button type=\"button\" onClick={() => verifyData()} className=\"confirmBtn\">\r\n                        <HeaderType />\r\n                    </Button>\r\n                    //   \r\n                    :\r\n                    <Button type=\"button\" disabled className=\"confirmBtn\">\r\n                        <HeaderType />\r\n                    </Button>\r\n                }\r\n\r\n            </Form.Row>\r\n        </Card>\r\n    )\r\n\r\n\r\n\r\n\r\n}","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Detail\\index.jsx",["408","409"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Admin\\LogPage\\index.jsx",["410","411","412","413"],"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport { NavLink} from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport { getLogs, searchLogs, getCategories } from '../../../api/apifunction'\r\nimport React from 'react';\r\nimport { Card, Table, message,Select} from 'antd'\r\n\r\nconst { Option } = Select;\r\nexport default function LogPage() {\r\n\r\n    const [logs, setLogs] = useState([]);\r\n    //define table columns\r\n    const [columns, setColumns] = useState([]);\r\n    //define sub-categories \r\n    const [categories, setCategories] = useState([]);\r\n \r\n    //search parameter\r\n    const [param, setParam] = useState(\"\");\r\n    //filter by sub-category\r\n    const [subId, setSubId] = useState(\"\");\r\n //define the filter date\r\n    const [startTime, setStartTime] = useState(\"\");\r\n    const [endTime, setEndTime] = useState(\"\");\r\n    const [uId, setUid] = useState(\"\");\r\n\r\n    //initialize the table columns\r\n    useEffect(() => {\r\n        //initialize the table columns\r\n        initializeColumns();\r\n        //get all the sub-categories\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    //get the logs or search logs\r\n    useEffect(() => {\r\n        fetchLogs(param, subId, startTime,endTime,uId);\r\n    }, [param, subId, startTime,endTime,uId]);\r\n\r\n    //get logs or search logs\r\n    const fetchLogs = async (name, subId,  startTime,endTime,uId) => {\r\n        let response;\r\n        //get all logs\r\n        if (name === \"\" && subId === \"\" && startTime === \"\"\r\n            && endTime === \"\" && uId === \"\") {\r\n            response = await getLogs();\r\n\r\n        }\r\n        //otherwise, search by parameter, sub-category, and a specific date\r\n        else {\r\n            response = await searchLogs(name, subId, startTime,endTime,uId);\r\n        }\r\n\r\n        if (response !== \"Network Error\" && typeof response !== 'undefined') {\r\n            if (response.data.status === \"SUCCESS\") {\r\n                if (response.data.data !== null) {\r\n                    setLogs(response.data.data)\r\n                } else {\r\n                    setLogs([])\r\n                }\r\n            } else {\r\n                message.error(response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    //get all the categories\r\n    const fetchCategories = async () => {\r\n\r\n        let response = await getCategories();\r\n\r\n        if (response !== \"Network Error\" && typeof response !== 'undefined') {\r\n            if (response.data.status === \"SUCCESS\") {\r\n                if (response.data.data !== null) {\r\n                    setCategories(response.data.data)\r\n                } else {\r\n                    setCategories([])\r\n                }\r\n                // console.log(response.data.data)\r\n                // setForumSection(response.data.data);\r\n            } else {\r\n                message.error(response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //initialize the table columns\r\n    function initializeColumns() {\r\n        const columns = [\r\n            //first column\r\n            {\r\n                title: ' Title',\r\n                dataIndex: 'title'\r\n            },\r\n            //second column\r\n            {\r\n                title: 'Description',\r\n                dataIndex: 'description'\r\n            },\r\n\r\n            {\r\n                title: 'Category',\r\n                width: 200,\r\n                dataIndex: 'category',\r\n                render: (category) => {\r\n                     return category.name;\r\n                }\r\n            },\r\n            {\r\n                title: 'Log Created',\r\n                width: 200,\r\n                dataIndex: 'createTime'\r\n            },\r\n            //fourth column\r\n            {\r\n                title: 'Modifier',\r\n                width: 200,\r\n                dataIndex: 'modifier',\r\n                render: (modifier) => {\r\n                    return modifier.firstName;\r\n                }\r\n            },\r\n            {\r\n                title: 'Action',\r\n                width: 200,\r\n                dataIndex: 'action'\r\n            },\r\n        ];\r\n        setColumns(columns);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const title = (\r\n        <span>\r\n            {/* Header title with link */}\r\n            <div>\r\n                <NavLink to=\"/\" onClick={handleClick} exact className=\"backToHome\">\r\n                    ADMIN\r\n                </NavLink>\r\n                <h1> {\">\"} </h1>\r\n                <NavLink to=\"/admin/logs\" exact className=\"currPage\">\r\n                    LOGS\r\n                </NavLink>\r\n             </div>\r\n            {/* display the sub-categories for the Park Document */}\r\n                <Select placeholder=\"Category\"\r\n                    style={{width:'200px'}}\r\n                    onChange={value => setSubId(value)}>\r\n                 <Option key=\"\" value=\"\">Category</Option>\r\n                {\r\n                    categories.map(c =>\r\n                        <Option key={c.id} value={c.id}>{c.name}</Option>\r\n                    )\r\n                }\r\n            </Select>\r\n          \r\n\r\n           \r\n        </span>\r\n    );\r\n\r\n    return (\r\n\r\n        <>\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='id'\r\n                    pagination={{\r\n                        defaultPageSize:5,\r\n                        showQuickJumper: true,\r\n                        showSizeChanger: true\r\n                    }}\r\n                    //set the table column names\r\n                    columns={columns}\r\n                    //load the park documents\r\n                    dataSource={logs}\r\n                >\r\n\r\n                </Table>\r\n            </Card>\r\n        </>\r\n    );\r\n}","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\Detail\\index.jsx",["414","415"],"\r\nimport { Card, List, } from 'antd';\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport LinkButton from '../../../Components/LinkButton';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Item = List.Item;\r\nexport default function Detail(props) {\r\n\r\n    //get the park document information that passed from the Home component\r\n    const { name, description, fileName, creator, subCategory, url } = props.location.state;\r\n\r\n    // Prevent redirect when clicking on Post deleting header\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    //define a sub-title\r\n    const title = (\r\n        <span>\r\n\r\n            <NavLink to=\"/documents\" exact className=\"backToEvent\">\r\n                PARK DOCUMENTS\r\n            </NavLink>\r\n            <h1> {\">\"} </h1>\r\n            <NavLink\r\n                to=\"/saleAndRent/detail\"\r\n                onClick={handleClick}\r\n                exact\r\n                className=\"currPage\"\r\n            >\r\n                POST DETAILS\r\n            </NavLink>\r\n        </span>\r\n    );\r\n\r\n    return (\r\n        <Card title={title}>\r\n            <List>\r\n                <Item>\r\n                    <span className='left'>Park Document Name:</span>\r\n                    <span>{name}</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className='left'>Description:</span>\r\n                    <span>{description}</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className='left'>Sub-category:</span>\r\n                    <span>{subCategory.name}</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className='left'>Creator:</span>\r\n                    <span>{creator.firstName}</span>\r\n                </Item>\r\n                <Item>\r\n                    <span className='left'>File:</span>\r\n                    <span>\r\n                        <a rel=\"noreferrer\" href={url} target=\"_blank\">\r\n                            {fileName && fileName.substring(fileName.lastIndexOf(\"-\") + 1)}\r\n                        </a></span>\r\n                </Item>\r\n            </List>\r\n        </Card>\r\n    );\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\Home\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\AddUpdate\\index.jsx",["416","417","418","419","420","421","422","423"],"import { Card, Button, Input, Form, Select, message, Upload, Divider } from \"antd\";\r\nimport { ArrowLeftOutlined, UploadOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport LinkButton from \"../../../Components/LinkButton\";\r\nimport {\r\n  fetchSubCategoriesByMainCategoryName,\r\n  addParkDocument,\r\n  updateParkDocument,\r\n  addParkDocumentSubcateogry\r\n} from \"../../../api/apifunction\";\r\nimport { BASE_FILE } from \"../../../constant/constants\";\r\nimport './index.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UploadFile } from '../../../api/FileUpload/fileupload'\r\n\r\n\r\n//destructing\r\nconst { TextArea } = Input;\r\nconst { Item } = Form;\r\nconst { Option } = Select;\r\n\r\n//style the form\r\nconst formItemLayout = {\r\n  labelCol: { span: 2.5 },\r\n  wrapperCol: { span: 5 },\r\n};\r\n\r\nexport default function AddUpdate(props) {\r\n  //define sub-categories\r\n  const [subCategories, setSubCategories] = useState([]);\r\n\r\n  //if this component is for update\r\n  const [isUpdate] = useState(!!props.location.state);\r\n  //filter by sub-category\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [subId, setSubId] = useState();\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [document, setDocument] = useState(props.location.state || {});\r\n  const [fileName, setFileName] = useState();\r\n  const [postFiles, setPostFiles] = useState(\"\");\r\n\r\n  const defaultOption = isUpdate ? document.subCategory.id : \"\";\r\n\r\n  //new sub-category\r\n  const [newSubCategory, setNewSubCategory] = useState(\"\");\r\n  //define a ref for the form\r\n  const ref = React.createRef();\r\n  //default file list\r\n  const fileList = isUpdate ? [\r\n    {\r\n      uid: '-1',\r\n      //name: document.fileName,\r\n      status: 'done',\r\n      url: document.url === null ? \"\" : document.url,\r\n    }\r\n  ] : [];\r\n  //loading all the park documents from the server API\r\n  useEffect(() => {\r\n    //get all the sub-categories\r\n    getSubCategories(\"Park Document\");\r\n    if (isUpdate) {\r\n      // console.log(props)\r\n      // console.log(document.fileName)\r\n      setFileName(document.fileName);\r\n      setPostFiles(document.fileName);\r\n      setSubId(document.subCategory.id);\r\n    }\r\n  },\r\n    //acts ac componentDidMount, the callback function will only be executed once after the first rendering\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(postFiles)\r\n  // }, [postFiles])\r\n\r\n  //get all the sub-categories for park document\r\n  const getSubCategories = async (pName) => {\r\n    const responseData = await fetchSubCategoriesByMainCategoryName(pName);\r\n\r\n    //if there is data, store it in the state\r\n    if (responseData.status === \"SUCCESS\" && responseData.data !== null) {\r\n      // console.log(responseData)\r\n      setSubCategories(responseData.data);\r\n    }\r\n    //fails, just display the error message\r\n    else {\r\n      message.error(responseData.message);\r\n    }\r\n  };\r\n\r\n  //add a update a park document\r\n  const addOrUpdateParkdocument = () => {\r\n    ref.current\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        const { name, description } = ref.current.getFieldsValue();\r\n        //check if add a parkdocument\r\n        var response;\r\n        var file;\r\n        if (postFiles.length === 0) {\r\n          file = ''\r\n        } else {\r\n          file = postFiles[0]\r\n        }\r\n\r\n        // console.log(file)\r\n        if (!document.id) {\r\n          response = await addParkDocument(\r\n            name,\r\n            subId,\r\n            description,\r\n            file,\r\n            // creator\r\n          );\r\n        } else {\r\n          response = await updateParkDocument(\r\n            document.id,\r\n            name,\r\n            subId,\r\n            description,\r\n            file\r\n          );\r\n        }\r\n\r\n        if (response.data.status === \"SUCCESS\" && response.data.data !== null) {\r\n          props.history.goBack();\r\n        }\r\n      })\r\n      .catch((errorInfo) => {\r\n        //fields has errors\r\n        console.log(\"errorInfo:\" + errorInfo);\r\n      });\r\n  };\r\n\r\n\r\n  //add a new sub-category\r\n  const addNewSubcategory = async () => {\r\n    // console.log('addItem');\r\n    //  addParkDocumentSubcateogry\r\n    //1: get the park document id\r\n    const parentId = subCategories[0].parentId;\r\n\r\n    const responseData = await addParkDocumentSubcateogry(newSubCategory, parentId, \"\", \"\");\r\n\r\n    //if there is data, store it in the state\r\n    if (responseData.status === \"SUCCESS\" && responseData.data !== null) {\r\n      setSubCategories(responseData.data);\r\n      props.history.push('/documents/addupdate');\r\n    }\r\n    //fails, just display the error message\r\n    else {\r\n      message.error(responseData.message);\r\n    }\r\n\r\n  };\r\n\r\n  // Prevent redirect when clicking on Post header\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  //define a sub-title\r\n  const title = (\r\n    <span>\r\n      <NavLink to=\"/documents\" exact className=\"backToEvent\">\r\n        PARK DOCUMENTS\r\n        </NavLink>\r\n      <h1> {\">\"} </h1>\r\n      <NavLink\r\n        to=\"/saleAndRent/detail\"\r\n        onClick={handleClick}\r\n        exact\r\n        className=\"currPage\"\r\n      >\r\n        {isUpdate ? \"POST UPDATING\" : \"POST CREATION\"}\r\n      </NavLink>\r\n    </span>\r\n  );\r\n\r\n  const onChange = (info) => {\r\n    const { status } = info.file;\r\n    //empty the file when it has been removed\r\n    if (status === \"removed\") {\r\n      setFileName(\"\");\r\n    }\r\n    if (status === \"done\") {\r\n      const fileNames = info.file.response.data;\r\n      setFileName(fileNames[0]);\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  }\r\n\r\n  // Handling Upload return data\r\n  const handleUpload = (data) => {\r\n    // console.log(data)\r\n    setPostFiles(data)\r\n  }\r\n\r\n  return (\r\n    <Card title={title}>\r\n      <Form {...formItemLayout} className=\"form\" ref={ref}>\r\n        <Item\r\n          label=\"Park Document Name:\"\r\n          name=\"name\"\r\n          initialValue={document.name}\r\n          rules={[\r\n            {\r\n\r\n              required: true,\r\n              message: \"Please enter the document name\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please enter the document name\" />\r\n        </Item>\r\n        <Item\r\n          label=\"Category\"\r\n          name=\"subId\"\r\n          rules={[\r\n            {\r\n              required: !{ isUpdate },\r\n              message: \"Please select a sub-category\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            placeholder=\"Sub-Category\"\r\n            onChange={(value) => setSubId(value)}\r\n            defaultValue={defaultOption}\r\n            dropdownRender={menu => (\r\n              <div>\r\n                {menu}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\r\n                  <Input style={{ flex: 'auto' }}\r\n                    value={newSubCategory}\r\n                    onChange={(e) => setNewSubCategory(e.target.value)} />\r\n\r\n                  <Button type='primary'\r\n                    className='add_button'\r\n                    onClick={addNewSubcategory}>\r\n                    <PlusOutlined />\r\n                     Add\r\n                 </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          >\r\n            {/* map out the park document sub-categories */}\r\n            {subCategories.map((c) => (\r\n              <Option key={c.id} value={c.id}>\r\n                {c.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Item>\r\n\r\n        <Item\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          initialValue={document.description}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please fill the description\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea row={4} />\r\n        </Item>\r\n\r\n        <UploadFile onUpload={handleUpload} />\r\n\r\n          <br/>\r\n        <Item >\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={addOrUpdateParkdocument}>\r\n            {isUpdate ? \"Update\" : \"Add\"}\r\n          </Button>\r\n        </Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\ParkDocument\\Delete\\index.jsx",["424","425"],"import React from 'react'\r\nimport { Card, Button, Input, Form } from \"antd\";\r\nimport LinkButton from \"../../../Components/LinkButton\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { deleteParkDocument } from \"../../../api/apifunction\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Item } = Form;\r\n\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 2.5 },\r\n  wrapperCol: { span: 5 },\r\n};\r\n\r\n//define a ref for the form\r\nconst ref = React.createRef();\r\nfunction DeleteParkDocument(props) {\r\n\r\n  // Prevent redirect when clicking on Post deleting header\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n  const deleteDocument = () => {\r\n    ref.current\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        const { reason, description } = ref.current.getFieldsValue();\r\n        const modifierId = \"\";\r\n        const itemId = props.location.state.id;\r\n        //check if add a parkdocument\r\n        var response = await deleteParkDocument(itemId, description, reason, modifierId);\r\n\r\n        if (response.data.status === \"SUCCESS\" && response.data.data !== null) {\r\n          props.history.goBack();\r\n        }\r\n      })\r\n      .catch((errorInfo) => {\r\n        //fields has errors\r\n        console.log(\"errorInfo:\" + errorInfo);\r\n      });\r\n  }\r\n  //define a sub-title\r\n  const title = (\r\n    <span>\r\n      <div>\r\n\r\n        <NavLink to=\"/documents\" exact className=\"backToEvent\">\r\n          PARK DOCUMENTS\r\n        </NavLink>\r\n        <h1> {\">\"} </h1>\r\n        <NavLink\r\n          to=\"/saleAndRent/detail\"\r\n          onClick={handleClick}\r\n          exact\r\n          className=\"currPage\"\r\n        >\r\n          POST DELETION\r\n        </NavLink>\r\n      </div>\r\n    </span>\r\n  );\r\n  return (\r\n    <Card title={title}>\r\n      <Form className=\"form\" {...formItemLayout} ref={ref}>\r\n        <Item\r\n          label=\"Reason to delete:\"\r\n          name=\"reason\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter the reason\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Why delete it?\" />\r\n        </Item>\r\n        <Item\r\n          label=\"Description\"\r\n          name=\"description\"\r\n        >\r\n          <TextArea row={4} />\r\n        </Item>\r\n\r\n        <Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={deleteDocument}>\r\n            Delete\r\n          </Button>\r\n        </Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DeleteParkDocument;\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\viewEvent.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\SearchMenu\\searchFeature.jsx",["426","427","428","429"],"import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Card, Table, Button, Input, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\n\r\n// Project functions\r\nimport DisplayEventInfo from \"../viewEvent\";\r\n\r\n// API calls\r\nimport {\r\n  searchEventsByCategory,\r\n  eventRetrieval,\r\n  searchEventsBySearch,\r\n  fetchSubCategories,\r\n} from \"../../../api/apifunction\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n// \r\n/**\r\n * Function in charge of loading element inside action menu, which will display a search functionality and as well \r\n * display the events based off search\r\n * @author Charles Breton\r\n * @returns Search feature in event action menu\r\n */\r\nexport default function SearchFunction() {\r\n\r\n  const [initialLoad, setInitialLoad] = useState(false);\r\n  // initilize events. track of events based of search\r\n  const [events, setEvents] = useState([]);\r\n\r\n  // initilize subcategory state\r\n  const [subCategories, setSubCategories] = useState([]);\r\n\r\n  // initilize the different categories to select from\r\n  const [descCategories, setDescCatogories] = useState([]);\r\n  const [locCategories, setLocCatogories] = useState([]);\r\n\r\n  //define table columns\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  // state for showing event detail modal and the content to display\r\n  const [showView, setShowView] = useState(false);\r\n  const [displayEvent, setDisplayEvent] = useState();\r\n\r\n  // initilize search input. input to search for specific event\r\n  const [param, setParam] = useState(\"\");\r\n  // initilize sub selection. select to retrieve certain subcategory data\r\n  const [descId, setDescId] = useState(\"\");\r\n  const [locId, setLocId] = useState(\"\");\r\n\r\n\r\n\r\n  // Initial Retrieval for loading component\r\n  useEffect(() => {\r\n\r\n    if (!initialLoad) {\r\n      // Retrieve events\r\n      fetchEvents();\r\n\r\n      // Initialize table column\r\n      initializeColumns();\r\n\r\n      // Retrieve categories for search function\r\n      fetchSubCategoriesCall();\r\n    }\r\n  }, []);\r\n\r\n  // Update view when state changes\r\n  useEffect(() => {\r\n    // Fetch event based of param\r\n    if (initialLoad) {\r\n      fetchEvents();\r\n    } else {\r\n      setInitialLoad(true)\r\n\r\n    }\r\n  }, [param, descId, locId]);\r\n\r\n  // Get events based of param\r\n  const fetchEvents = async () => {\r\n    let response;\r\n\r\n    // Retrieve initial events or when its empty\r\n    if (param === \"\" && descId === \"\" && locId === \"\") {\r\n      response = await eventRetrieval();\r\n    }\r\n    // Retrieve events based of search input\r\n    else if (param !== \"\" && descId === \"\" && locId === \"\") {\r\n      response = await searchEventsBySearch(param);\r\n      if (response.status === \"SUCCESS\" && response.data !== null) {\r\n        setEvents(response.data)\r\n        return\r\n      } else {\r\n        setEvents('')\r\n        return\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // Retrieve events based of categories selection\r\n    else if ((param === \"\" && descId !== \"\") || locId !== \"\") {\r\n      response = await searchEventsByCategory(locId, descId);\r\n    }\r\n    // Retrieve events based off both\r\n    else {\r\n      const resultA = await searchEventsByCategory(locId, descId);\r\n      const resultB = await searchEventsBySearch(param);\r\n\r\n      let resultAData = null;\r\n      let resultBData = null;\r\n\r\n      if (resultB.status === \"SUCCESS\" && resultB.data !== null && resultA.data.status === \"SUCCESS\" && resultA.data.data !== null) {\r\n        resultAData = resultA.data.data\r\n        resultBData = resultB.data\r\n      } else {\r\n        setEvents(null);\r\n      }\r\n\r\n      if (resultAData !== null && resultBData !== null) {\r\n        const filteredEvents = resultAData.filter(value => resultBData.includes(value))\r\n        setEvents(filteredEvents);\r\n      } else {\r\n        setEvents(null);\r\n      }\r\n      return\r\n    }\r\n\r\n    const responseData = response.data;\r\n    //if there is data, store it in the state\r\n    if (response !== \"Network Error\"  && typeof response.data !== 'undefined') {\r\n      if (responseData.status === \"SUCCESS\" && responseData.data !== null) {\r\n        setEvents(responseData.data);\r\n      }\r\n      //fails, just display the error message\r\n      else {\r\n        setEvents(null)\r\n        // message.error(\"responseData.message\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fetch sub-categories for event\r\n  const fetchSubCategoriesCall = async () => {\r\n    const response = await fetchSubCategories(localStorage.getItem(\"event_cat_id\"));\r\n    if (response !== \"Network Error\" && typeof response.data !== 'undefined') {\r\n      if (response.status === \"SUCCESS\" && response.data !== null) {\r\n        setSubCategories(response.data);\r\n        handleCategoryType(response.data)\r\n      } else {\r\n        message.error('Error retrieving categories');\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const handleCategoryType = (info) => {\r\n    // Check if we receive any categories\r\n    // if (info !== null) {\r\n    // Setup initial default value\r\n    let locList = [{ value: \"\", label: \"Location\" }];\r\n    let descList = [{ value: \"\", label: \"Categories\" }];\r\n\r\n    // Go through list and determine which goes where\r\n    for (let i = 0; i < info.length; i++) {\r\n      if (info[i].type === \"location\") {\r\n        let object = {\r\n          value: info[i].id,\r\n          label: info[i].name,\r\n        };\r\n        locList.push(object);\r\n      } else {\r\n        let object = {\r\n          value: info[i].id,\r\n          label: info[i].name,\r\n        };\r\n        descList.push(object);\r\n      }\r\n    }\r\n    setLocCatogories(locList);\r\n    setDescCatogories(descList);\r\n  }\r\n\r\n\r\n  const handleViewEvent = (event) => {\r\n    setShowView(true)\r\n    setDisplayEvent(event)\r\n  };\r\n\r\n  const onCloseWindow = () => {\r\n    setShowView(false);\r\n  };\r\n\r\n  function initializeColumns() {\r\n    // Render for columns\r\n    const columns = [\r\n      {\r\n        title: \"Title\",\r\n        width: 200,\r\n        dataIndex: \"title\",\r\n        key: \"title\",\r\n      },\r\n      {\r\n        title: 'Action',\r\n        dataIndex: '',\r\n        key: 'x',\r\n        render: (event) =>\r\n          <Fragment>\r\n            <Button type=\"primary\" onClick={() => handleViewEvent(event)} size='10'>View</Button>\r\n          </Fragment>\r\n      }\r\n    ];\r\n    setColumns(columns);\r\n  }\r\n\r\n\r\n  // Load header contains search features\r\n  const title = (\r\n    <Fragment>\r\n      <h4>\r\n        <b className=\"seach_title\">Search</b>\r\n      </h4>\r\n      <Search\r\n        className=\"search\"\r\n        placeholder=\"Search for event\"\r\n        style={{ width: \"100%\" }}\r\n        onSearch={(value) => { setParam(value) }}\r\n      />\r\n      <br />\r\n      {/* display the sub-categories for the Park Document  */}\r\n      <Select\r\n        className='drop_down_desc'\r\n        placeholder=\"Categories\"\r\n        style={{ width: \"100%\", paddingTop: 10 }}\r\n        options={descCategories}\r\n        onChange={(value) => setDescId(value.value)}\r\n      />\r\n      <br />\r\n      <Select\r\n        className='drop_down_loc'\r\n        placeholder=\"Location\"\r\n        style={{ width: \"100%\", paddingTop: 5 }}\r\n        options={locCategories}\r\n        onChange={(value) => setLocId(value.value)}\r\n      />\r\n    </Fragment>\r\n  );\r\n\r\n  // Render for component\r\n  return (\r\n    <Card title={title}>\r\n      <h4>\r\n        <b>Events</b>\r\n      </h4>\r\n      {/* Show Event Info only if you press on View element */}\r\n      {showView ?\r\n        <DisplayEventInfo onCloseWindow={onCloseWindow} displayEvent={displayEvent} />\r\n        : null\r\n      }\r\n      <Table\r\n        bordered\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 5, alignment: \"center\" }}\r\n        // //set the table column names\r\n        columns={columns}\r\n        //load the events\r\n        dataSource={events}\r\n      ></Table>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\Account\\decodeAccessToken.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\tokenRefresher.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\constant\\constants.js",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Detail\\contactSeller.jsx",["430","431","432","433"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\Detail\\showPictures.jsx",["434","435"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\Components\\LinkButton\\index.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\SaleAndRent\\AddUpdate\\confirmationModal.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Detail\\contactSeller.jsx",["436","437","438","439","440","441","442"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\AddUpdate\\confirmationModal.jsx",["443"],"// Imports\r\nimport React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { List, message, } from 'antd';\r\n\r\n// API calls\r\nimport { postForum, putForum } from '../../../api/apifunction'\r\n\r\n// Css files\r\nimport './add_update.css';\r\n\r\nconst Item = List.Item;\r\n\r\n/**\r\n * Forum Component that handles confirmation modal\r\n *\r\n * @author Charles Breton\r\n * @returns Confirmation Modal for forum\r\n */\r\nclass ConfirmationModal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            content: {},\r\n            formattedImages: [],\r\n            isOpen: true,\r\n            category: [],\r\n            files: [],\r\n            type: [],\r\n            details: '',\r\n        };\r\n    }\r\n\r\n    // Initial call to store data about post\r\n    componentDidMount() {\r\n        this.setState({ content: this.props.displayPost });\r\n        this.setState({ title: this.props.displayPost[0] });\r\n        this.setState({ details: this.props.displayPost[1] });\r\n        this.setState({ files: this.props.displayPost[2] });\r\n        this.setState({ type: this.props.displayPost[3] });\r\n        \r\n        this.formatFile(this.props.displayPost[2])\r\n    }\r\n\r\n    // Formatting file to only display name without id\r\n    formatFile = (file) => {\r\n        let remainingImages = [];\r\n        if (file !== null) {\r\n            for (let i = 0; i < file.length; i++) {\r\n                remainingImages.push(file[i].split('-')[5]);\r\n            }\r\n        }\r\n        this.setState({ formattedImages: remainingImages })\r\n    }\r\n\r\n    // Render component\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.state.content[0]}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Item>\r\n                            <span>Category: {this.state.type.label}</span>\r\n                        </Item>\r\n                        <Item>\r\n                            <span>Desc: {this.state.content[1]}</span>\r\n                        </Item>\r\n                        <Item>\r\n                            <span>File Attached: </span>\r\n                        </Item>\r\n                        <Item>\r\n                            {this.fileList()}\r\n                        </Item>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button className=\"createBtn\" onClick={this.postToServer}>\r\n                        <span className=\"createBtn_header\">{this.buttonTypeDisplay() ? \"UPDATE\" : \"CREATE\"}</span>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // Show list of files\r\n    fileList = () => {\r\n        const listItems = this.state.formattedImages.map((item) =>\r\n            <li key={item}>{item}</li>\r\n        );\r\n        return (\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    // Handle closing modal\r\n    closeModal = (arg) => {\r\n        this.props.onCloseWindow(arg);\r\n    }\r\n\r\n    // Determining if its updating or creating post\r\n    buttonTypeDisplay = () => {\r\n        if (this.props.rawData.length !== 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    // Async function to pass data to server\r\n    postToServer = async () => {\r\n        // Allow retrieval from session storage\r\n        const token = JSON.parse(localStorage.getItem(\"session_details\"))\r\n\r\n        // Create format for values to send to post request\r\n        const title = this.state.title;\r\n        const details = this.state.details;\r\n        const type = this.state.type.label;\r\n        const file = this.state.files\r\n\r\n\r\n        // WILL BE REMOVED LATER\r\n        const status = \"Active\"\r\n\r\n        // Check if we are updating or creating post\r\n        let response = [];\r\n        if (this.props.rawData.length !== 0) {\r\n            let id = this.props.rawData.id\r\n            response = await putForum(id, title, details, type, file, status);\r\n        } else {\r\n            response = await postForum(title, details, type, file, status);\r\n        }\r\n\r\n        // Post request\r\n        try {\r\n            if (response !== \"Network Error\" && typeof response.data.status !== 'undefined') {\r\n                if (response.data.status === \"SUCCESS\") {\r\n\r\n                    // Successfull\r\n                    this.props.props.history.goBack();\r\n                    message.success(\"Post Succesfully Posted\")\r\n                } else {\r\n                    // Error\r\n                    message.error(\"Error adding post to server\")\r\n                }\r\n            } else {\r\n                message.error(\"Server is down\")\r\n            }\r\n        } catch (error) {}\r\n    };\r\n}\r\n\r\nexport default ConfirmationModal;\r\n\r\n\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\api\\FileUpload\\fileupload.jsx",["444","445","446"],"\r\n// Imports\r\nimport { message, Upload } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// Custom components\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { BASE_FILE } from \"../../constant/constants\";\r\n\r\n// API calls\r\nimport { deleteFile } from '../apifunction'\r\n\r\n// Css file\r\nimport \"./fileUpload.css\";\r\n\r\n\r\n\r\n/**\r\n * Upload files system and handle all the logic to upload, deleting files\r\n * \r\n * @author Charles Breton\r\n * @param {*} onUpload function to call to pass data to parent component\r\n * @returns onUpload(***) pass files array to parent component\r\n */\r\nexport const UploadFile = ({ onUpload }) => {\r\n    \r\n    // Retrieve data for upload component\r\n    const files = JSON.parse(localStorage.getItem(\"load_files\"));\r\n    const uploadType = localStorage.getItem(\"upload_type\");\r\n    let maxFiles = localStorage.getItem(\"load_section\");\r\n    let accept = localStorage.getItem(\"upload_type\");\r\n    \r\n    // State of all files\r\n    const [filesUploaded, setFilesUploaded] = useState([]);\r\n\r\n    // Token for uploading , deleting files\r\n    const token = localStorage.getItem(\"access_token\");\r\n\r\n    // Formatted File List with first load \r\n    const [fileListItems, setFileListItems] = useState([])\r\n\r\n    // Ensure file formatted is complete before displaying element\r\n    const [filesLoaded, setFilesLoaded] = useState(false)\r\n\r\n\r\n    // Initial function call when loading component\r\n    useEffect(() => {\r\n        // Determine if need to format files\r\n        if (files !== null && files.length !== 0) {\r\n            formatFiles()\r\n        } else {\r\n            setFilesLoaded(true)\r\n        }\r\n    }, [])\r\n\r\n    // Send files to parent function when upload or deleting file happens\r\n    useEffect(() => {\r\n        onUpload(filesUploaded)\r\n    }, [filesUploaded])\r\n\r\n\r\n    // Formating files to be compatible with Antd component\r\n    const formatFiles = () => {\r\n        // With updating posts adding all files to current file list\r\n        addImages(files, 2);\r\n\r\n        // Format files to Antd standards\r\n        let formattedList = [];\r\n        for (let i = 0; i < files.length; i++) {\r\n            let object = {\r\n                uid: files[i],\r\n                name: styleNameFormat(files[i]),\r\n                status: 'done',\r\n                url: files[i],\r\n                thumbUrl: files[i]\r\n            };\r\n\r\n            formattedList.push(object);\r\n        }\r\n\r\n        // Setting states\r\n        setFileListItems(formattedList)\r\n        setFilesLoaded(true)\r\n\r\n        // Format file to remove id attached for display file name\r\n        function styleNameFormat(item) {\r\n            if (item !== null) {\r\n                let name = item.split('-')[5];\r\n                return name;\r\n            }\r\n            return '';\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Upload component properties\r\n    let fileProps = {\r\n        name: \"files\",\r\n\r\n        // Max amount of files allowed\r\n        maxCount: maxFiles,\r\n        \r\n        // File types\r\n        accept,\r\n        defaultFileList: [...fileListItems],\r\n        multiple: false,\r\n\r\n        // API info\r\n        action: BASE_FILE,\r\n        headers: {\r\n            'Authorization': `bearer ${token}`\r\n        },\r\n\r\n        // Handle upload component state changes (updating / deleting)\r\n        onChange(info) {\r\n            const { status } = info.file;\r\n            // Handle removing a file\r\n            if (status === \"removed\") {\r\n                const response = info.file.response\r\n\r\n                // Determine the type of deleting if a previous uploaded file (UPDATING POST) or just added file\r\n                if (response !== '' && typeof response !== 'undefined') {\r\n                    removeImage(response.data[0], 1)\r\n                } else {\r\n                    removeImage(info.file.uid, 2)\r\n                }\r\n            }\r\n\r\n            // Handle adding a file\r\n            if (status === \"done\") {\r\n                const response = info.file.response\r\n                if (response !== \"Network Error\") {\r\n                    if (response.status === \"SUCCESS\" && response.data !== null) {\r\n                        // console.log(response.data)\r\n                        addImages(response.data, 1)\r\n                    } else {\r\n                        message.error(\"Fetching wasn't successfull\");\r\n                    }\r\n                } else {\r\n                    addImages(\"BLANK\")\r\n                    message.error(\"Error with connecting to backend\");\r\n                }\r\n\r\n                message.success(`${info.file.name} File Uploaded Successfully.`);\r\n            } else if (status === \"error\") {\r\n                message.error(`${info.file.name} File Upload Failed.`);\r\n            }\r\n\r\n        },\r\n    };\r\n\r\n    // Add a picture to files state\r\n    const addImages = (info, type) => {\r\n        let allImages = [];\r\n        const currentfiles = filesUploaded;\r\n\r\n        // Creating a new list with all files currently stored\r\n        if (typeof currentfiles !== 'undefined' && currentfiles !== null) {\r\n            for (let i = 0; i < currentfiles.length; i++) {\r\n                allImages.push(currentfiles[i]);\r\n            }\r\n        }\r\n\r\n        // Extra part if upload new file for first time\r\n        if (type === 1) {\r\n            allImages.push(info[0])\r\n        } else {\r\n            for (let i = 0; i < info.length; i++) {\r\n                allImages.push(info[i]);\r\n            }\r\n        }\r\n\r\n        // Update files state\r\n        setFilesUploaded(allImages)\r\n    };\r\n\r\n\r\n    // Remove a picture to files state\r\n    const removeImage = (info, type) => {\r\n        let remainingImages = [];\r\n        const currentfiles = filesUploaded;\r\n\r\n        // Creating a new list with all files currently stored\r\n        for (let i = 0; i < currentfiles.length; i++) {\r\n            if (currentfiles[i] !== info) {\r\n                remainingImages.push(currentfiles[i])\r\n            }\r\n        }\r\n\r\n        deleteFileItem(info);\r\n\r\n        // Update files state\r\n        setFilesUploaded(remainingImages)\r\n\r\n    };\r\n\r\n    // Deleting file from backend\r\n    const deleteFileItem = async (id) => {\r\n        const response = await deleteFile(id);\r\n        try {\r\n            if (response !== \"Network Error\") {\r\n                if (response.data.status === \"SUCCESS\") {\r\n                } else {\r\n                    message.error(\"Deleting file wasn't successfull\");\r\n                }\r\n            } else {\r\n                message.error(\"Error with connecting to backend\");\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    // Render component for upload files\r\n    return (\r\n        <div>\r\n            { filesLoaded ?\r\n                <div className=\"upload_system\">\r\n                    <Upload {...fileProps}\r\n                        className=\"\">\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"upload_text\">\r\n                            Click or drag images to this area to upload\r\n                 </p>\r\n                    </Upload>\r\n                </div>\r\n                : null}\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\Detail\\showPictures.jsx",["447"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Services\\AddUpdate\\confirmationModal.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Detail\\responses.jsx",["448","449"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Forum\\Detail\\newResponse.jsx",["450","451","452","453","454"],"import React, { useState, Component, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Card, List, message, } from 'antd';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { respondToPost } from '../../../api/apifunction';\r\n\r\nconst Item = List.Item;\r\n\r\n\r\n\r\nclass NewResponse extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            content: {},\r\n            isOpen: true,\r\n            category: {},\r\n            fileFormatted: '',\r\n            message: '',\r\n            errorMessage: '',\r\n        };\r\n        this.postResponse = this.postResponse.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        // this.setState({ content: this.props.displayEvent });\r\n        // this.setState({ category: this.props.displayEvent[3] })\r\n        // // setTimeout('', 5000);\r\n        // this.formatFile(this.props.displayEvent[2])\r\n\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.file[0])\r\n        // console.log(this.state.fileFormatted);\r\n        // console.log(this.state.category.label)\r\n        return (\r\n            <>\r\n                <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>REPLY</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group className=\"descriptionGroup\">\r\n                                <p className=\"error\">{this.state.errorMessage}</p>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows=\"10\"\r\n                                    // width= \"100%\"\r\n                                    // fluid='true'\r\n                                    placeholder=\"MESSAGE\"\r\n                                    className=\"col-xs-10\"\r\n                                    id=\"description\"\r\n\r\n                                    onChange={(event) => this.setState({ message: event.target.value })}\r\n                                // value={forumDesc}\r\n                                // onChange={(event) => setForumDesc(event.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" className='createBtn' onClick={this.postResponse}>\r\n                            <span className=\"createBtn_header\">POST</span>\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n    closeModal = (arg) => {\r\n        this.props.onCloseWindow(arg);\r\n    }\r\n\r\n    formatFile = (file) => {\r\n        if (file !== undefined) {\r\n\r\n            const formatted = file[0].split('-')[5];\r\n            this.setState({ fileFormatted: formatted })\r\n        }\r\n    }\r\n\r\n    postResponse = () => {\r\n        const token_info = JSON.parse(localStorage.getItem(\"session_details\")); //admin@wrvpark.com password\r\n        if (token_info != null) {\r\n            const originalPostId = this.props.id;\r\n            //const responderId = token_info.sub;\r\n            const details = this.state.message;\r\n            const image = \"\";\r\n\r\n            console.log(originalPostId);\r\n            //console.log(responses);\r\n            console.log(details);\r\n            if (details != \"\") {\r\n                this.postAsyncCall(originalPostId, details, image)\r\n                this.setState({ errorMessage: '' })\r\n            } else {\r\n                this.setState({ errorMessage: \"Message is empty!\" })\r\n            }\r\n            //console.log(this.props.responses);\r\n\r\n        } else {\r\n            message.warning(\"Yon need to login first!\")\r\n        }\r\n\r\n        // this.closeModal()\r\n\r\n    }\r\n\r\n    postAsyncCall = async (postId, details, image) => {\r\n        const response = await respondToPost(postId, details, image);\r\n        console.log(response)\r\n        try {\r\n            if (response !== \"Network Error\") {\r\n                console.log(response.data)\r\n                if (response.data.status === \"SUCCESS\" && response.data.data !== null) {\r\n                    message.success(\"Responses Sent Successfully\")\r\n                    this.closeModal()\r\n\r\n                    // window.location.reload();\r\n                } else {\r\n                    message.error(\"Fetching wasn't successfull\")\r\n                }\r\n            } else {\r\n                message.error(\"Error with connecting to backend\")\r\n            }\r\n        } catch (error) { }\r\n    }\r\n}\r\n\r\nexport default NewResponse;\r\n\r\n\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\AddUpdate\\confirmationModal.jsx",[],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Detail\\contactSeller.jsx",["455","456","457","458"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\LostAndFound\\Detail\\showPictures.jsx",["459","460"],"D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\UpdateEvent\\index.jsx",["461","462","463","464"],"import React, { useEffect, useState, Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../CreateEvent/createEvent.css\";\r\nimport NotificationBell from \"../../../Components/NotificationBell\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DatePicker from \"@bit/nexxtway.react-rainbow.date-picker\";\r\nimport TimeField from \"react-simple-timefield\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { message, Upload } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { addEvent } from \"../../../api/apifunction\";\r\nimport DisplayEventInfo from \"./eventModal\";\r\n\r\nexport default class UpdateEvent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      eventName: \"\",\r\n      location: \"\",\r\n      startDate: new Date(),\r\n      startTime: \"\",\r\n      endDate: new Date(),\r\n      endTime: \"\",\r\n      description: \"\",\r\n      fileName: \"fileNameForNow.txt\",\r\n      recurring: false,\r\n      isLimited: false,\r\n      uId: \"\",\r\n      locations: [],\r\n      categories: [],\r\n      category: \"\",\r\n      displayEvent: false,\r\n    };\r\n    this.fetchSubCategories = this.fetchSubCategories.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.ref = React.createRef();\r\n\r\n    // this.fetchSubCategories();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let currentComponent = this;\r\n    this.fetchSubCategories(currentComponent);\r\n  }\r\n\r\n  fetchSubCategories = async (currentComponent) => {\r\n    // console.log(\"WORKING\")\r\n    const event_id = localStorage.getItem(\"event_cat_id\");\r\n    await axios\r\n      .get(\"http://localhost/api/v1/categories/\" + event_id)\r\n      .then(function (response) {\r\n        // handle success\r\n        const responseData = response.data;\r\n        let locations = [];\r\n        let categories = [];\r\n        if (responseData.status === \"SUCCESS\" && responseData !== null) {\r\n          for (let elem of responseData.data) {\r\n            if (elem.type === \"location\") {\r\n              locations.push({\r\n                value: elem.id,\r\n                label: elem.name,\r\n                type: elem.type,\r\n              });\r\n            } else {\r\n              categories.push({\r\n                value: elem.id,\r\n                label: elem.name,\r\n                type: elem.type,\r\n              });\r\n            }\r\n          }\r\n\r\n          currentComponent.setState({\r\n            locations: locations,\r\n          });\r\n\r\n          currentComponent.setState({\r\n            categories: categories,\r\n          });\r\n        } else {\r\n          message.error(responseData.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    axios\r\n      .post(\"http://localhost/api/v1/events/\", {\r\n        uId: this.state.uId,\r\n        title: this.state.eventName,\r\n        description: this.state.description,\r\n        startTime: this.state.startDate,\r\n        endTime: this.state.endDate,\r\n        fileName: \"wqe\",\r\n        isLimited: this.state.limited,\r\n        locSubId: this.state.location,\r\n        descSubId: this.state.category,\r\n        isRecurring: this.state.recurring,\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        const responseData = response.data;\r\n        if (responseData.status === \"SUCCESS\" && responseData !== null) {\r\n          window.alert(\"Event Added Successfuly\")\r\n          this.showSuccessModal(responseData);\r\n          console.log(responseData.message)\r\n        } else {\r\n          message.error(responseData.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  showSuccessModal = (responseData) => {\r\n    \r\n  };\r\n\r\n  handleChange = (e) => {\r\n    try {\r\n      if (e.target.type === \"checkbox\") {\r\n        this.setState({\r\n          [e.target.id]: e.target.checked,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          [e.target.id]: e.target.value,\r\n        });\r\n        console.log(e.target.id);\r\n      }\r\n    } catch {\r\n      if (e.type === \"description\") {\r\n        this.setState({\r\n          category: e.value,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          [e.type]: e.value,\r\n        });\r\n      }\r\n      console.log(e.type, e.value, e.label);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const fileProps = {\r\n      name: \"files\",\r\n      multiple: true,\r\n      action: \"http://localhost:80/api/v1/files\",\r\n      onChange(info) {\r\n        const { status } = info.file;\r\n        if (status === \"done\") {\r\n          const fileNames = info.file.response.data;\r\n          console.log(fileNames);\r\n          // this.setState({ fileName: fileNames[0] });\r\n          message.success(`${info.file.name} file uploaded successfully.`);\r\n        } else if (status === \"error\") {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"top\">\r\n          <NavLink to=\"/event\" exact className=\"backToEvent\">\r\n            EVENT\r\n          </NavLink>\r\n          <h1> {\">\"} </h1>\r\n          <NavLink to=\"/event/create\" exact className=\"currPage\">\r\n            EVENT CREATION\r\n          </NavLink>\r\n\r\n          <NotificationBell />\r\n        </div>\r\n        <div className=\"forms\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\">\r\n                <Form.Control\r\n                  placeholder=\"EVENT NAME\"\r\n                  className=\"eventName\"\r\n                  id=\"eventName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"3\">\r\n                <Select\r\n                  placeholder=\"Location\"\r\n                  options={this.state.locations}\r\n                  id=\"location\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"3\">\r\n                <Select\r\n                  placeholder=\"Category\"\r\n                  options={this.state.categories}\r\n                  id=\"category\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"3\" className=\"startDateGroup\">\r\n                <Form.Label>start date</Form.Label>\r\n                <DatePicker\r\n                  formatStyle=\"medium\"\r\n                  value={this.state.startDate}\r\n                  onChange={(value) => this.setState({ startDate: value })}\r\n                  className=\"startDate\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"1\" className=\"startTimeGroup\">\r\n                <Form.Label>start time</Form.Label>\r\n                <TimeField\r\n                  onChange={this.handleChange}\r\n                  className=\"startTime\"\r\n                  id=\"startTime\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" className=\"endDateGroup\">\r\n                <Form.Label>end date</Form.Label>\r\n                <DatePicker\r\n                  formatStyle=\"medium\"\r\n                  value={this.state.endDate}\r\n                  onChange={(value) => this.setState({ endDate: value })}\r\n                  className=\"endDate\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"1\">\r\n                <Form.Label>end time</Form.Label>\r\n                <TimeField\r\n                  onChange={this.handleChange}\r\n                  className=\"endTime\"\r\n                  id=\"endTime\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group className=\"descriptionGroup\">\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"7\"\r\n                  fluid\r\n                  placeholder=\"Description\"\r\n                  className=\"description\"\r\n                  id=\"description\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row >\r\n              <div className=\"file_uploading\">\r\n              <Upload {...fileProps}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                  <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">\r\n                  Click or drag file to this area to upload\r\n                </p>\r\n              </Upload>\r\n              </div>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group className=\"recurringGroup\">\r\n                <Form.Check\r\n                  className=\"recurring\"\r\n                  type=\"checkbox\"\r\n                  label=\"recurring\"\r\n                  id=\"recurring\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group className=\"limitedGroup\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"limited\"\r\n                  className=\"limited\"\r\n                  id=\"limited\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Button type=\"submit\" className=\"submitBtn\">\r\n                CREATE\r\n              </Button>\r\n            </Form.Row>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\SCHOOL\\WINTER 2021\\PROJ\\CODE\\F5\\Wendy-s-RV-Park\\src\\pages\\Event\\UpdateEvent\\eventModal.js",["465"],"import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nimport '../detailModal.css'\r\n\r\n\r\nclass DisplayEventInfo extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      content: {},\r\n      isOpen: true,\r\n      creator: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    \r\n    this.setState({ content: this.props.displayEvent });\r\n    this.setState({creator: this.state.content.creator})\r\n    console.log(this.props.displayEvent.descSubcategory.name)\r\n  }\r\n\r\n  render() {\r\n\r\n    // console.log(this.content)\r\n    return (\r\n      <>\r\n        <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>SUCCESS!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n\r\n              < span className='det_description'>{this.state.content.description}. There are only three ways to make this work. The first is to let me take care of everything. The second is for you to take care of everything. The third is to split everything 50 / 50. I think the last option is the most preferable, but I'm certain it'll also mean the end of our marriage.</span>\r\n\r\n\r\n              <div className='det_inline_block_shedule'>\r\n                <div className='det_con_det_time'>\r\n                  <span className='det_start_time'>\r\n                    Start time: {this.state.content.startTime}\r\n                  </span>\r\n                  <br />\r\n                  <span className='det_end_time'>\r\n                    End time: {this.state.content.endTime}\r\n                  </span>\r\n                </div>\r\n                <div className='det_con_frequency'>\r\n                  test\r\n                  {this.state.content.recurring ?\r\n                    <span className='det_frequency'>test{this.state.content.recurFrequency}</span>\r\n                    : null\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <div className='det_sec_categories'>\r\n                <div className='det_con_category'>\r\n                  <span className='det_category'>Category: {this.props.displayEvent.descSubcategory.name}</span>\r\n                </div>\r\n                <div className='det_con_location'>\r\n                  <span className='det_location'>Location: {this.props.displayEvent.locationSubcategory.name}</span>\r\n                </div>\r\n              </div> \r\n\r\n              {/* Last Line */}\r\n              <div className='det_sec_end'>\r\n                <div className='det_con_qFile'>\r\n                  {this.props.displayEvent.fileURL ?\r\n                    <a className='det_link' target=\"_blank\"  href={this.props.displayEvent.fileURL}>File attached</a>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className='det_con_posted'>\r\n                  <span className='det_posted'>Posted: {this.props.displayEvent.creator.name}</span>\r\n                </div>\r\n              </div> \r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" className='det_done_button' onClick={this.closeModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  closeModal = (arg) => {\r\n    this.props.onCloseWindow(arg);\r\n  }\r\n}\r\n\r\nexport default DisplayEventInfo;",{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","severity":1,"message":"471","line":32,"column":33,"nodeType":"472","messageId":"473","endLine":32,"endColumn":35},{"ruleId":"474","severity":1,"message":"475","line":1,"column":17,"nodeType":"476","messageId":"477","endLine":1,"endColumn":26},{"ruleId":"474","severity":1,"message":"478","line":8,"column":10,"nodeType":"476","messageId":"477","endLine":8,"endColumn":28},{"ruleId":"474","severity":1,"message":"479","line":8,"column":30,"nodeType":"476","messageId":"477","endLine":8,"endColumn":46},{"ruleId":"474","severity":1,"message":"480","line":2,"column":41,"nodeType":"476","messageId":"477","endLine":2,"endColumn":48},{"ruleId":"474","severity":1,"message":"481","line":13,"column":23,"nodeType":"476","messageId":"477","endLine":13,"endColumn":31},{"ruleId":"474","severity":1,"message":"482","line":1,"column":17,"nodeType":"476","messageId":"477","endLine":1,"endColumn":26},{"ruleId":"474","severity":1,"message":"483","line":1,"column":28,"nodeType":"476","messageId":"477","endLine":1,"endColumn":36},{"ruleId":"474","severity":1,"message":"484","line":14,"column":10,"nodeType":"476","messageId":"477","endLine":14,"endColumn":18},{"ruleId":"474","severity":1,"message":"485","line":15,"column":8,"nodeType":"476","messageId":"477","endLine":15,"endColumn":24},{"ruleId":"474","severity":1,"message":"486","line":18,"column":3,"nodeType":"476","messageId":"477","endLine":18,"endColumn":25},{"ruleId":"474","severity":1,"message":"487","line":19,"column":3,"nodeType":"476","messageId":"477","endLine":19,"endColumn":17},{"ruleId":"474","severity":1,"message":"488","line":20,"column":3,"nodeType":"476","messageId":"477","endLine":20,"endColumn":23},{"ruleId":"474","severity":1,"message":"489","line":19,"column":8,"nodeType":"476","messageId":"477","endLine":19,"endColumn":17},{"ruleId":"474","severity":1,"message":"475","line":6,"column":10,"nodeType":"476","messageId":"477","endLine":6,"endColumn":19},{"ruleId":"474","severity":1,"message":"490","line":10,"column":10,"nodeType":"476","messageId":"477","endLine":10,"endColumn":17},{"ruleId":"474","severity":1,"message":"491","line":15,"column":7,"nodeType":"476","messageId":"477","endLine":15,"endColumn":15},{"ruleId":"474","severity":1,"message":"492","line":25,"column":10,"nodeType":"476","messageId":"477","endLine":25,"endColumn":21},{"ruleId":"474","severity":1,"message":"493","line":25,"column":23,"nodeType":"476","messageId":"477","endLine":25,"endColumn":37},{"ruleId":"474","severity":1,"message":"494","line":33,"column":10,"nodeType":"476","messageId":"477","endLine":33,"endColumn":15},{"ruleId":"474","severity":1,"message":"495","line":33,"column":17,"nodeType":"476","messageId":"477","endLine":33,"endColumn":25},{"ruleId":"474","severity":1,"message":"496","line":35,"column":10,"nodeType":"476","messageId":"477","endLine":35,"endColumn":22},{"ruleId":"474","severity":1,"message":"497","line":35,"column":24,"nodeType":"476","messageId":"477","endLine":35,"endColumn":34},{"ruleId":"474","severity":1,"message":"498","line":36,"column":10,"nodeType":"476","messageId":"477","endLine":36,"endColumn":24},{"ruleId":"474","severity":1,"message":"499","line":36,"column":26,"nodeType":"476","messageId":"477","endLine":36,"endColumn":38},{"ruleId":"474","severity":1,"message":"500","line":78,"column":9,"nodeType":"476","messageId":"477","endLine":78,"endColumn":16},{"ruleId":"501","severity":1,"message":"502","line":87,"column":6,"nodeType":"503","endLine":87,"endColumn":8,"suggestions":"504"},{"ruleId":"501","severity":1,"message":"505","line":99,"column":6,"nodeType":"503","endLine":99,"endColumn":24,"suggestions":"506"},{"ruleId":"501","severity":1,"message":"502","line":110,"column":6,"nodeType":"503","endLine":110,"endColumn":16,"suggestions":"507"},{"ruleId":"501","severity":1,"message":"508","line":124,"column":6,"nodeType":"503","endLine":124,"endColumn":18,"suggestions":"509"},{"ruleId":"474","severity":1,"message":"510","line":137,"column":15,"nodeType":"476","messageId":"477","endLine":137,"endColumn":19},{"ruleId":"511","severity":1,"message":"512","line":238,"column":23,"nodeType":"513","messageId":"514","endLine":238,"endColumn":25},{"ruleId":"515","severity":1,"message":"516","line":257,"column":78,"nodeType":"517","messageId":"518","endLine":257,"endColumn":79,"suggestions":"519"},{"ruleId":"515","severity":1,"message":"520","line":257,"column":81,"nodeType":"517","messageId":"518","endLine":257,"endColumn":82,"suggestions":"521"},{"ruleId":"515","severity":1,"message":"522","line":257,"column":84,"nodeType":"517","messageId":"518","endLine":257,"endColumn":85,"suggestions":"523"},{"ruleId":"474","severity":1,"message":"524","line":284,"column":11,"nodeType":"476","messageId":"477","endLine":284,"endColumn":20},{"ruleId":"474","severity":1,"message":"524","line":288,"column":11,"nodeType":"476","messageId":"477","endLine":288,"endColumn":20},{"ruleId":"511","severity":1,"message":"525","line":364,"column":22,"nodeType":"513","messageId":"514","endLine":364,"endColumn":24},{"ruleId":"474","severity":1,"message":"526","line":453,"column":12,"nodeType":"476","messageId":"477","endLine":453,"endColumn":18},{"ruleId":"474","severity":1,"message":"527","line":465,"column":12,"nodeType":"476","messageId":"477","endLine":465,"endColumn":25},{"ruleId":"528","severity":1,"message":"529","line":506,"column":13,"nodeType":"530","endLine":506,"endColumn":46},{"ruleId":"528","severity":1,"message":"529","line":510,"column":13,"nodeType":"530","endLine":510,"endColumn":47},{"ruleId":"528","severity":1,"message":"529","line":559,"column":11,"nodeType":"530","endLine":559,"endColumn":68},{"ruleId":"528","severity":1,"message":"529","line":569,"column":11,"nodeType":"530","endLine":569,"endColumn":71},{"ruleId":"528","severity":1,"message":"529","line":639,"column":52,"nodeType":"530","endLine":639,"endColumn":109},{"ruleId":"528","severity":1,"message":"529","line":654,"column":11,"nodeType":"530","endLine":654,"endColumn":69},{"ruleId":"528","severity":1,"message":"529","line":661,"column":43,"nodeType":"530","endLine":661,"endColumn":104},{"ruleId":"531","severity":1,"message":"532","line":70,"column":21,"nodeType":"530","endLine":70,"endColumn":101},{"ruleId":"474","severity":1,"message":"533","line":6,"column":8,"nodeType":"476","messageId":"477","endLine":6,"endColumn":14},{"ruleId":"474","severity":1,"message":"534","line":36,"column":16,"nodeType":"476","messageId":"477","endLine":36,"endColumn":21},{"ruleId":"501","severity":1,"message":"535","line":49,"column":8,"nodeType":"503","endLine":49,"endColumn":10,"suggestions":"536"},{"ruleId":"474","severity":1,"message":"534","line":50,"column":15,"nodeType":"476","messageId":"477","endLine":50,"endColumn":20},{"ruleId":"474","severity":1,"message":"537","line":51,"column":17,"nodeType":"476","messageId":"477","endLine":51,"endColumn":25},{"ruleId":"501","severity":1,"message":"538","line":61,"column":6,"nodeType":"503","endLine":61,"endColumn":8,"suggestions":"539"},{"ruleId":"501","severity":1,"message":"538","line":66,"column":6,"nodeType":"503","endLine":66,"endColumn":32,"suggestions":"540"},{"ruleId":"501","severity":1,"message":"541","line":79,"column":8,"nodeType":"503","endLine":79,"endColumn":10,"suggestions":"542"},{"ruleId":"474","severity":1,"message":"543","line":83,"column":13,"nodeType":"476","messageId":"477","endLine":83,"endColumn":27},{"ruleId":"474","severity":1,"message":"533","line":4,"column":8,"nodeType":"476","messageId":"477","endLine":4,"endColumn":14},{"ruleId":"474","severity":1,"message":"544","line":50,"column":17,"nodeType":"476","messageId":"477","endLine":50,"endColumn":23},{"ruleId":"474","severity":1,"message":"537","line":51,"column":19,"nodeType":"476","messageId":"477","endLine":51,"endColumn":27},{"ruleId":"501","severity":1,"message":"545","line":61,"column":8,"nodeType":"503","endLine":61,"endColumn":10,"suggestions":"546"},{"ruleId":"501","severity":1,"message":"545","line":66,"column":8,"nodeType":"503","endLine":66,"endColumn":34,"suggestions":"547"},{"ruleId":"501","severity":1,"message":"541","line":81,"column":8,"nodeType":"503","endLine":81,"endColumn":10,"suggestions":"548"},{"ruleId":"474","severity":1,"message":"543","line":85,"column":13,"nodeType":"476","messageId":"477","endLine":85,"endColumn":27},{"ruleId":"474","severity":1,"message":"482","line":4,"column":10,"nodeType":"476","messageId":"477","endLine":4,"endColumn":19},{"ruleId":"474","severity":1,"message":"483","line":4,"column":21,"nodeType":"476","messageId":"477","endLine":4,"endColumn":29},{"ruleId":"474","severity":1,"message":"549","line":5,"column":10,"nodeType":"476","messageId":"477","endLine":5,"endColumn":20},{"ruleId":"474","severity":1,"message":"533","line":6,"column":8,"nodeType":"476","messageId":"477","endLine":6,"endColumn":14},{"ruleId":"474","severity":1,"message":"550","line":7,"column":10,"nodeType":"476","messageId":"477","endLine":7,"endColumn":21},{"ruleId":"474","severity":1,"message":"551","line":7,"column":23,"nodeType":"476","messageId":"477","endLine":7,"endColumn":36},{"ruleId":"474","severity":1,"message":"552","line":16,"column":5,"nodeType":"476","messageId":"477","endLine":16,"endColumn":15},{"ruleId":"474","severity":1,"message":"553","line":19,"column":10,"nodeType":"476","messageId":"477","endLine":19,"endColumn":14},{"ruleId":"474","severity":1,"message":"554","line":19,"column":16,"nodeType":"476","messageId":"477","endLine":19,"endColumn":21},{"ruleId":"474","severity":1,"message":"480","line":19,"column":23,"nodeType":"476","messageId":"477","endLine":19,"endColumn":30},{"ruleId":"474","severity":1,"message":"555","line":19,"column":32,"nodeType":"476","messageId":"477","endLine":19,"endColumn":38},{"ruleId":"474","severity":1,"message":"556","line":20,"column":10,"nodeType":"476","messageId":"477","endLine":20,"endColumn":28},{"ruleId":"474","severity":1,"message":"557","line":20,"column":30,"nodeType":"476","messageId":"477","endLine":20,"endColumn":42},{"ruleId":"474","severity":1,"message":"558","line":23,"column":9,"nodeType":"476","messageId":"477","endLine":23,"endColumn":15},{"ruleId":"474","severity":1,"message":"533","line":4,"column":8,"nodeType":"476","messageId":"477","endLine":4,"endColumn":14},{"ruleId":"474","severity":1,"message":"559","line":13,"column":27,"nodeType":"476","messageId":"477","endLine":13,"endColumn":39},{"ruleId":"474","severity":1,"message":"560","line":13,"column":41,"nodeType":"476","messageId":"477","endLine":13,"endColumn":51},{"ruleId":"474","severity":1,"message":"561","line":16,"column":21,"nodeType":"476","messageId":"477","endLine":16,"endColumn":35},{"ruleId":"474","severity":1,"message":"562","line":53,"column":12,"nodeType":"476","messageId":"477","endLine":53,"endColumn":21},{"ruleId":"474","severity":1,"message":"563","line":53,"column":23,"nodeType":"476","messageId":"477","endLine":53,"endColumn":35},{"ruleId":"501","severity":1,"message":"564","line":66,"column":8,"nodeType":"503","endLine":66,"endColumn":10,"suggestions":"565"},{"ruleId":"501","severity":1,"message":"566","line":71,"column":8,"nodeType":"503","endLine":71,"endColumn":34,"suggestions":"567"},{"ruleId":"474","severity":1,"message":"568","line":138,"column":11,"nodeType":"476","messageId":"477","endLine":138,"endColumn":30},{"ruleId":"474","severity":1,"message":"569","line":37,"column":12,"nodeType":"476","messageId":"477","endLine":37,"endColumn":22},{"ruleId":"501","severity":1,"message":"535","line":47,"column":8,"nodeType":"503","endLine":47,"endColumn":10,"suggestions":"570"},{"ruleId":"571","severity":1,"message":"572","line":117,"column":21,"nodeType":"530","endLine":117,"endColumn":25},{"ruleId":"474","severity":1,"message":"533","line":5,"column":8,"nodeType":"476","messageId":"477","endLine":5,"endColumn":14},{"ruleId":"474","severity":1,"message":"573","line":35,"column":20,"nodeType":"476","messageId":"477","endLine":35,"endColumn":29},{"ruleId":"474","severity":1,"message":"574","line":39,"column":21,"nodeType":"476","messageId":"477","endLine":39,"endColumn":31},{"ruleId":"501","severity":1,"message":"535","line":47,"column":8,"nodeType":"503","endLine":47,"endColumn":10,"suggestions":"575"},{"ruleId":"501","severity":1,"message":"541","line":81,"column":8,"nodeType":"503","endLine":81,"endColumn":10,"suggestions":"576"},{"ruleId":"474","severity":1,"message":"543","line":86,"column":13,"nodeType":"476","messageId":"477","endLine":86,"endColumn":27},{"ruleId":"501","severity":1,"message":"541","line":84,"column":8,"nodeType":"503","endLine":84,"endColumn":10,"suggestions":"577"},{"ruleId":"474","severity":1,"message":"533","line":4,"column":8,"nodeType":"476","messageId":"477","endLine":4,"endColumn":14},{"ruleId":"474","severity":1,"message":"578","line":36,"column":12,"nodeType":"476","messageId":"477","endLine":36,"endColumn":19},{"ruleId":"474","severity":1,"message":"579","line":36,"column":21,"nodeType":"476","messageId":"477","endLine":36,"endColumn":31},{"ruleId":"474","severity":1,"message":"544","line":53,"column":17,"nodeType":"476","messageId":"477","endLine":53,"endColumn":23},{"ruleId":"474","severity":1,"message":"537","line":54,"column":19,"nodeType":"476","messageId":"477","endLine":54,"endColumn":27},{"ruleId":"501","severity":1,"message":"580","line":65,"column":8,"nodeType":"503","endLine":65,"endColumn":10,"suggestions":"581"},{"ruleId":"501","severity":1,"message":"580","line":71,"column":8,"nodeType":"503","endLine":71,"endColumn":34,"suggestions":"582"},{"ruleId":"474","severity":1,"message":"583","line":9,"column":20,"nodeType":"476","messageId":"477","endLine":9,"endColumn":33},{"ruleId":"474","severity":1,"message":"584","line":16,"column":7,"nodeType":"476","messageId":"477","endLine":16,"endColumn":11},{"ruleId":"474","severity":1,"message":"585","line":39,"column":19,"nodeType":"476","messageId":"477","endLine":39,"endColumn":27},{"ruleId":"474","severity":1,"message":"537","line":41,"column":19,"nodeType":"476","messageId":"477","endLine":41,"endColumn":27},{"ruleId":"474","severity":1,"message":"586","line":43,"column":18,"nodeType":"476","messageId":"477","endLine":43,"endColumn":25},{"ruleId":"501","severity":1,"message":"587","line":53,"column":9,"nodeType":"503","endLine":53,"endColumn":11,"suggestions":"588"},{"ruleId":"501","severity":1,"message":"589","line":61,"column":8,"nodeType":"503","endLine":61,"endColumn":28,"suggestions":"590"},{"ruleId":"474","severity":1,"message":"584","line":17,"column":7,"nodeType":"476","messageId":"477","endLine":17,"endColumn":11},{"ruleId":"474","severity":1,"message":"500","line":27,"column":11,"nodeType":"476","messageId":"477","endLine":27,"endColumn":18},{"ruleId":"474","severity":1,"message":"591","line":31,"column":12,"nodeType":"476","messageId":"477","endLine":31,"endColumn":20},{"ruleId":"501","severity":1,"message":"592","line":57,"column":8,"nodeType":"503","endLine":57,"endColumn":10,"suggestions":"593"},{"ruleId":"474","severity":1,"message":"533","line":5,"column":8,"nodeType":"476","messageId":"477","endLine":5,"endColumn":14},{"ruleId":"501","severity":1,"message":"535","line":51,"column":6,"nodeType":"503","endLine":51,"endColumn":8,"suggestions":"594"},{"ruleId":"474","severity":1,"message":"585","line":20,"column":19,"nodeType":"476","messageId":"477","endLine":20,"endColumn":27},{"ruleId":"474","severity":1,"message":"595","line":24,"column":23,"nodeType":"476","messageId":"477","endLine":24,"endColumn":35},{"ruleId":"474","severity":1,"message":"596","line":25,"column":21,"nodeType":"476","messageId":"477","endLine":25,"endColumn":31},{"ruleId":"474","severity":1,"message":"597","line":26,"column":17,"nodeType":"476","messageId":"477","endLine":26,"endColumn":23},{"ruleId":"474","severity":1,"message":"598","line":3,"column":10,"nodeType":"476","messageId":"477","endLine":3,"endColumn":27},{"ruleId":"474","severity":1,"message":"599","line":4,"column":8,"nodeType":"476","messageId":"477","endLine":4,"endColumn":18},{"ruleId":"474","severity":1,"message":"600","line":1,"column":54,"nodeType":"476","messageId":"477","endLine":1,"endColumn":60},{"ruleId":"474","severity":1,"message":"598","line":2,"column":10,"nodeType":"476","messageId":"477","endLine":2,"endColumn":27},{"ruleId":"474","severity":1,"message":"601","line":2,"column":29,"nodeType":"476","messageId":"477","endLine":2,"endColumn":43},{"ruleId":"474","severity":1,"message":"599","line":4,"column":8,"nodeType":"476","messageId":"477","endLine":4,"endColumn":18},{"ruleId":"474","severity":1,"message":"602","line":11,"column":10,"nodeType":"476","messageId":"477","endLine":11,"endColumn":19},{"ruleId":"474","severity":1,"message":"603","line":39,"column":10,"nodeType":"476","messageId":"477","endLine":39,"endColumn":18},{"ruleId":"474","severity":1,"message":"604","line":49,"column":9,"nodeType":"476","messageId":"477","endLine":49,"endColumn":17},{"ruleId":"474","severity":1,"message":"605","line":182,"column":9,"nodeType":"476","messageId":"477","endLine":182,"endColumn":17},{"ruleId":"474","severity":1,"message":"599","line":3,"column":8,"nodeType":"476","messageId":"477","endLine":3,"endColumn":18},{"ruleId":"474","severity":1,"message":"598","line":5,"column":10,"nodeType":"476","messageId":"477","endLine":5,"endColumn":27},{"ruleId":"474","severity":1,"message":"606","line":3,"column":8,"nodeType":"476","messageId":"477","endLine":3,"endColumn":13},{"ruleId":"474","severity":1,"message":"607","line":34,"column":10,"nodeType":"476","messageId":"477","endLine":34,"endColumn":23},{"ruleId":"501","severity":1,"message":"608","line":68,"column":6,"nodeType":"503","endLine":68,"endColumn":8,"suggestions":"609"},{"ruleId":"501","severity":1,"message":"610","line":79,"column":6,"nodeType":"503","endLine":79,"endColumn":28,"suggestions":"611"},{"ruleId":"474","severity":1,"message":"584","line":8,"column":7,"nodeType":"476","messageId":"477","endLine":8,"endColumn":11},{"ruleId":"511","severity":1,"message":"512","line":152,"column":21,"nodeType":"513","messageId":"514","endLine":152,"endColumn":23},{"ruleId":"511","severity":1,"message":"512","line":152,"column":40,"nodeType":"513","messageId":"514","endLine":152,"endColumn":42},{"ruleId":"511","severity":1,"message":"512","line":152,"column":61,"nodeType":"513","messageId":"514","endLine":152,"endColumn":63},{"ruleId":"474","severity":1,"message":"480","line":4,"column":10,"nodeType":"476","messageId":"477","endLine":4,"endColumn":17},{"ruleId":"501","severity":1,"message":"612","line":32,"column":5,"nodeType":"476","endLine":32,"endColumn":14,"suggestions":"613"},{"ruleId":"474","severity":1,"message":"483","line":1,"column":17,"nodeType":"476","messageId":"477","endLine":1,"endColumn":25},{"ruleId":"474","severity":1,"message":"482","line":1,"column":38,"nodeType":"476","messageId":"477","endLine":1,"endColumn":47},{"ruleId":"474","severity":1,"message":"614","line":3,"column":10,"nodeType":"476","messageId":"477","endLine":3,"endColumn":14},{"ruleId":"474","severity":1,"message":"584","line":7,"column":7,"nodeType":"476","messageId":"477","endLine":7,"endColumn":11},{"ruleId":"511","severity":1,"message":"512","line":147,"column":21,"nodeType":"513","messageId":"514","endLine":147,"endColumn":23},{"ruleId":"511","severity":1,"message":"512","line":147,"column":40,"nodeType":"513","messageId":"514","endLine":147,"endColumn":42},{"ruleId":"511","severity":1,"message":"512","line":147,"column":61,"nodeType":"513","messageId":"514","endLine":147,"endColumn":63},{"ruleId":"474","severity":1,"message":"615","line":117,"column":15,"nodeType":"476","messageId":"477","endLine":117,"endColumn":20},{"ruleId":"474","severity":1,"message":"616","line":29,"column":11,"nodeType":"476","messageId":"477","endLine":29,"endColumn":21},{"ruleId":"501","severity":1,"message":"617","line":54,"column":8,"nodeType":"503","endLine":54,"endColumn":10,"suggestions":"618"},{"ruleId":"501","severity":1,"message":"619","line":59,"column":8,"nodeType":"503","endLine":59,"endColumn":23,"suggestions":"620"},{"ruleId":"501","severity":1,"message":"612","line":29,"column":5,"nodeType":"476","endLine":29,"endColumn":14,"suggestions":"621"},{"ruleId":"474","severity":1,"message":"482","line":2,"column":18,"nodeType":"476","messageId":"477","endLine":2,"endColumn":27},{"ruleId":"474","severity":1,"message":"554","line":3,"column":16,"nodeType":"476","messageId":"477","endLine":3,"endColumn":21},{"ruleId":"474","severity":1,"message":"483","line":1,"column":17,"nodeType":"476","messageId":"477","endLine":1,"endColumn":25},{"ruleId":"474","severity":1,"message":"482","line":1,"column":38,"nodeType":"476","messageId":"477","endLine":1,"endColumn":47},{"ruleId":"474","severity":1,"message":"614","line":3,"column":10,"nodeType":"476","messageId":"477","endLine":3,"endColumn":14},{"ruleId":"474","severity":1,"message":"584","line":7,"column":7,"nodeType":"476","messageId":"477","endLine":7,"endColumn":11},{"ruleId":"511","severity":1,"message":"512","line":96,"column":25,"nodeType":"513","messageId":"514","endLine":96,"endColumn":27},{"ruleId":"474","severity":1,"message":"584","line":13,"column":7,"nodeType":"476","messageId":"477","endLine":13,"endColumn":11},{"ruleId":"511","severity":1,"message":"512","line":157,"column":22,"nodeType":"513","messageId":"514","endLine":157,"endColumn":24},{"ruleId":"511","severity":1,"message":"512","line":157,"column":41,"nodeType":"513","messageId":"514","endLine":157,"endColumn":43},{"ruleId":"511","severity":1,"message":"512","line":157,"column":62,"nodeType":"513","messageId":"514","endLine":157,"endColumn":64},{"ruleId":"474","severity":1,"message":"480","line":5,"column":10,"nodeType":"476","messageId":"477","endLine":5,"endColumn":17},{"ruleId":"501","severity":1,"message":"612","line":31,"column":5,"nodeType":"476","endLine":31,"endColumn":14,"suggestions":"622"},{"ruleId":"474","severity":1,"message":"482","line":1,"column":17,"nodeType":"476","messageId":"477","endLine":1,"endColumn":26},{"ruleId":"474","severity":1,"message":"483","line":1,"column":28,"nodeType":"476","messageId":"477","endLine":1,"endColumn":36},{"ruleId":"474","severity":1,"message":"484","line":14,"column":10,"nodeType":"476","messageId":"477","endLine":14,"endColumn":18},{"ruleId":"474","severity":1,"message":"485","line":15,"column":8,"nodeType":"476","messageId":"477","endLine":15,"endColumn":24},{"ruleId":"531","severity":1,"message":"532","line":70,"column":21,"nodeType":"530","endLine":70,"endColumn":101},"no-native-reassign",["623"],"no-negated-in-lhs",["624"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.","'message' is defined but never used.","'password' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'addEvent' is defined but never used.","'DisplayEventInfo' is defined but never used.","'searchEventsByCategory' is defined but never used.","'eventRetrieval' is defined but never used.","'searchEventsBySearch' is defined but never used.","'ThreeDots' is defined but never used.","'NavLink' is defined but never used.","'username' is assigned a value but never used.","'accessToken' is assigned a value but never used.","'setAccessToken' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'primaryPhone' is assigned a value but never used.","'setPrimary' is assigned a value but never used.","'secondaryPhone' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'showLogin' and 'showProfile'. Either include them or remove the dependency array. You can also do a functional update 'setShowLogin(s => ...)' if you only need 'showLogin' in the 'setShowLogin' call.","ArrayExpression",["625"],"React Hook useEffect has missing dependencies: 'props' and 'showLogout'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["626"],["627"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["628"],"'name' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["629","630"],"Unnecessary escape character: \\^.",["631","632"],"Unnecessary escape character: \\*.",["633","634"],"'is_renter' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Logout' is defined but never used.","'onValueChange' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Moment' is defined but never used.","'setId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPostInfo'. Either include it or remove the dependency array.",["635"],"'setSubId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchLostAndFounds'. Either include it or remove the dependency array.",["636"],["637"],"React Hook useEffect has missing dependencies: 'fetchCategories' and 'props.history.location.state'. Either include them or remove the dependency array.",["638"],"'categoriesList' is assigned a value but never used.","'setUId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchServices'. Either include it or remove the dependency array.",["639"],["640"],["641"],"'useHistory' is defined but never used.","'getServices' is defined but never used.","'searchService' is defined but never used.","'DatePicker' is defined but never used.","'List' is defined but never used.","'Space' is defined but never used.","'Button' is defined but never used.","'CaretRightOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'Search' is assigned a value but never used.","'BellOutlined' is defined but never used.","'BellFilled' is defined but never used.","'searchTheForum' is defined but never used.","'subcribed' is assigned a value but never used.","'setSubcribed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchForums'. Either include it or remove the dependency array.",["642"],"React Hook useEffect has a missing dependency: 'searchForumPost'. Either include it or remove the dependency array.",["643"],"'handleSubcribeClick' is assigned a value but never used.","'infoLoaded' is assigned a value but never used.",["644"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'setitemId' is assigned a value but never used.","'setCreator' is assigned a value but never used.",["645"],["646"],["647"],"'section' is assigned a value but never used.","'setSection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchRent' and 'fetchSale'. Either include them or remove the dependency array.",["648"],["649"],"'getCategories' is defined but never used.","'Item' is assigned a value but never used.","'setParam' is assigned a value but never used.","'setDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'date', 'fetchUsers', 'initializeColumns', 'param', and 'subId'. Either include them or remove the dependency array.",["650"],"React Hook useEffect has missing dependencies: 'fetchUsers' and 'initializeColumns'. Either include them or remove the dependency array.",["651"],"'userData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserInfo'. Either include it or remove the dependency array.",["652"],["653"],"'setStartTime' is assigned a value but never used.","'setEndTime' is assigned a value but never used.","'setUid' is assigned a value but never used.","'ArrowLeftOutlined' is defined but never used.","'LinkButton' is defined but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'BASE_FILE' is defined but never used.","'fileName' is assigned a value but never used.","'fileList' is assigned a value but never used.","'onChange' is assigned a value but never used.","'axios' is defined but never used.","'subCategories' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchEvents', 'fetchSubCategoriesCall', 'initialLoad', and 'initializeColumns'. Either include them or remove the dependency array.",["654"],"React Hook useEffect has missing dependencies: 'fetchEvents' and 'initialLoad'. Either include them or remove the dependency array.",["655"],"React Hook useEffect contains a call to 'setImages'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [data.images] as a second argument to the useEffect Hook.",["656"],"'Card' is defined but never used.","'token' is assigned a value but never used.","'uploadType' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'files' and 'formatFiles'. Either include them or remove the dependency array.",["657"],"React Hook useEffect has a missing dependency: 'onUpload'. Either include it or remove the dependency array. If 'onUpload' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["658"],["659"],["660"],"no-global-assign","no-unsafe-negation",{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"messageId":"669","fix":"670","desc":"671"},{"messageId":"672","fix":"673","desc":"674"},{"messageId":"669","fix":"675","desc":"671"},{"messageId":"672","fix":"676","desc":"674"},{"messageId":"669","fix":"677","desc":"671"},{"messageId":"672","fix":"678","desc":"674"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"685","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"679","fix":"696"},{"desc":"679","fix":"697"},{"desc":"685","fix":"698"},{"desc":"685","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"679","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"715","fix":"721"},{"desc":"715","fix":"722"},"Update the dependencies array to be: [showLogin, showProfile]",{"range":"723","text":"724"},"Update the dependencies array to be: [props, props.LogOutData, showLogout]",{"range":"725","text":"726"},"Update the dependencies array to be: [showLogin, showProfile, userName]",{"range":"727","text":"728"},"Update the dependencies array to be: [props, showLogout]",{"range":"729","text":"730"},"removeEscape",{"range":"731","text":"732"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"733","text":"734"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"735","text":"732"},{"range":"736","text":"734"},{"range":"737","text":"732"},{"range":"738","text":"734"},"Update the dependencies array to be: [fetchPostInfo]",{"range":"739","text":"740"},"Update the dependencies array to be: [fetchLostAndFounds]",{"range":"741","text":"742"},"Update the dependencies array to be: [startTime, endTime, name, fetchLostAndFounds]",{"range":"743","text":"744"},"Update the dependencies array to be: [fetchCategories, props.history.location.state]",{"range":"745","text":"746"},"Update the dependencies array to be: [fetchServices]",{"range":"747","text":"748"},"Update the dependencies array to be: [startTime, endTime, name, fetchServices]",{"range":"749","text":"750"},{"range":"751","text":"746"},"Update the dependencies array to be: [fetchForums]",{"range":"752","text":"753"},"Update the dependencies array to be: [dateFrom, dateTo, search, searchForumPost]",{"range":"754","text":"755"},{"range":"756","text":"740"},{"range":"757","text":"740"},{"range":"758","text":"746"},{"range":"759","text":"746"},"Update the dependencies array to be: [fetchRent, fetchSale]",{"range":"760","text":"761"},"Update the dependencies array to be: [startTime, endTime, name, fetchSale, fetchRent]",{"range":"762","text":"763"},"Update the dependencies array to be: [date, fetchUsers, initializeColumns, param, subId]",{"range":"764","text":"765"},"Update the dependencies array to be: [param, subId, date, fetchUsers, initializeColumns]",{"range":"766","text":"767"},"Update the dependencies array to be: [fetchUserInfo]",{"range":"768","text":"769"},{"range":"770","text":"740"},"Update the dependencies array to be: [fetchEvents, fetchSubCategoriesCall, initialLoad, initializeColumns]",{"range":"771","text":"772"},"Update the dependencies array to be: [param, descId, locId, initialLoad, fetchEvents]",{"range":"773","text":"774"},"Add dependencies array: [data.images]",{"range":"775","text":"776"},"Update the dependencies array to be: [files, formatFiles]",{"range":"777","text":"778"},"Update the dependencies array to be: [filesUploaded, onUpload]",{"range":"779","text":"780"},{"range":"781","text":"776"},{"range":"782","text":"776"},[3313,3315],"[showLogin, showProfile]",[3655,3673],"[props, props.LogOutData, showLogout]",[3953,3963],"[showLogin, showProfile, userName]",[4305,4317],"[props, showLogout]",[8206,8207],"",[8206,8206],"\\",[8209,8210],[8209,8209],[8212,8213],[8212,8212],[1488,1490],"[fetchPostInfo]",[1763,1765],"[fetchLostAndFounds]",[1866,1892],"[startTime, endTime, name, fetchLostAndFounds]",[2457,2459],"[fetchCategories, props.history.location.state]",[1908,1910],"[fetchServices]",[2015,2041],"[startTime, endTime, name, fetchServices]",[2665,2667],[2009,2011],"[fetchForums]",[2117,2143],"[dateFrom, dateTo, search, searchForumPost]",[1476,1478],[1469,1471],[2455,2457],[2707,2709],[2208,2210],"[fetchRent, fetchSale]",[2333,2359],"[startTime, endTime, name, fetchSale, fetchRent]",[1537,1539],"[date, fetchUsers, initializeColumns, param, subId]",[1781,1801],"[param, subId, date, fetchUsers, initializeColumns]",[1909,1911],"[fetchUserInfo]",[1426,1428],[2009,2011],"[fetchEvents, fetchSubCategoriesCall, initialLoad, initializeColumns]",[2212,2234],"[param, descId, locId, initialLoad, fetchEvents]",[783,783],", [data.images]",[1644,1646],"[files, formatFiles]",[1789,1804],"[filesUploaded, onUpload]",[731,731],[764,764]]